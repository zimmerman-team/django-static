{"version":3,"sources":["app/modules/documentation-module/state/model.ts","app/modules/documentation-module/state/store.ts","app/modules/documentation-module/state/data.ts","app/modules/documentation-module/common/DocSideBar/common/ui/CustomLink.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/DocsideBarContainer.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/DocsideBarNavList.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/ApiDocSearchBoxContainer.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/ApiDocSearchInput.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/CustomLink2.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/SubLink3.tsx","app/modules/documentation-module/common/DocSideBar/common/TreeItem.tsx","app/modules/documentation-module/common/DocSideBar/common/ui/LicenseFooter.tsx","app/modules/documentation-module/common/DocSideBar/index.tsx","app/modules/documentation-module/common/DocSideBar/utils.ts","app/modules/documentation-module/common/DocDetail/common/ui/CategoryHeader.tsx","app/modules/documentation-module/common/DocDetail/common/utils/ui/index.tsx","app/modules/documentation-module/common/DocDetail/common/ui/SubCategoryHeader.tsx","app/modules/documentation-module/common/DocDetail/common/ui/SubCaregoryDescription.tsx","app/modules/documentation-module/common/DocDetail/common/ApiParameterList/common/ui/ParameterHeader.tsx","app/modules/documentation-module/common/DocDetail/common/ApiParameterList/common/ui/ParameterList.tsx","app/modules/documentation-module/common/DocDetail/common/ApiParameterList/common/ui/ParameterListItem.tsx","app/modules/documentation-module/common/DocDetail/common/ApiParameterList/index.tsx","app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/Code.tsx","app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/CallContainer.tsx","app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/MethodType.tsx","app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/CallHeader.tsx","app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/index.tsx","app/modules/documentation-module/common/DocDetail/common/ui/CallFragment.tsx","app/modules/documentation-module/common/DocDetail/common/ui/SubCategoryFragment.tsx","app/modules/documentation-module/common/DocDetail/index.tsx","app/modules/documentation-module/common/DocDetail/common/ApiBaseList/common/ui/LandingEndpointItem.tsx","app/modules/documentation-module/common/DocDetail/common/ApiBaseList/index.tsx","app/modules/documentation-module/common/DocLanding/common/ui/HeaderH6.tsx","app/modules/documentation-module/common/DocLanding/common/ui/LoadingIndicator.tsx","app/modules/documentation-module/common/DocLanding/index.tsx","app/modules/documentation-module/routes.tsx","app/modules/documentation-module/index.tsx"],"names":["requestsModel","activeRequest","method","header","url","raw","host","path","query","key","value","showRequest","action","state","payload","docStoreModel","collection","item","description","_postman_id","_postman_isSubFolder","name","protocolProfileBehavior","disableBodyPruning","request","protocol","disabled","type","body","mode","formdata","info","schema","api","params","fetch","process","then","res","json","docStore","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","CustomLink","styled","props","DocsideBarContainer","div","DocsideBarNavList","ApiDocSearchBoxContainer","ApiDocSearchInput","InputBase","CustomLink2","SubLink3","Link","to","active","requestMethod","text","Item","TreeItem","TreeItemLink","Fragment","length","nodeId","label","postmanId","children","decodeURIComponent","activeHash","replace","LicenseFooter","DocsideBar","history","useHistory","data","categories","React","useState","searchVal","setSearchVal","setActiveHash","listen","l","hash","useEffect","setTimeout","window","location","id","element","document","getElementById","scrollIntoView","Box","height","placeholder","inputProps","onChange","e","target","style","overflowY","TreeView","defaultCollapseIcon","FolderOpen","defaultExpandIcon","Folder","results","searchValue","toLowerCase","forEach","category","categoryPass","indexOf","item1Pass","item2Pass","item3Pass","catIndex","item1Index","item2Index","push","item1","item2","item3","getResults","map","subItem1","subItem2","subItem3","CategoryHeader","Grid","container","spacing","md","Typography","variant","className","remarkPlugins","gfm","highlight","ApiItemDivider","getEndpointPath","endpoint","endpointPath","hasOwnProperty","get","pathItem","SubCategoryHeader","width","SubCaregoryDescription","ParameterHeader","ParameterList","ParameterListItem","li","ApiCallParamItem","ApiCallParamList","index","Code","code","CallContainer","MethodType","CallHeader","CopySignal","ApiCallFragment","clipboard","useClipboard","copiedTimeout","parsed","apiEnvVars","apiURL","actions","useVisible","vi","Math","floor","rootMargin","targetRef","percent","handleClick","useCallback","copy","ref","opacity","copied","onClick","CallFragment","subItem","SubCategoryFragment","DocDetail","useParams","find","cat","LandingEndpointItem","ApiListItem","ApiList","HeaderH6","LoadingContainer","LoadingIndicator","CircularProgress","DocLanding","loading","RouteContainer","DocumentationRoutes","fetchPostman","useEffectOnce","exact","DocumentationModule","useTitle","store","Header","Container","maxWidth","direction"],"mappings":"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","file":"static/js/4.f74f1c3b.chunk.js","sourcesContent":["// cc:api documentation module#; state - model\nimport { action, Action } from 'easy-peasy';\nimport { Endpoint } from 'app/state/interfaces/Endpoint';\nimport { ApiModel } from 'app/state/api';\n\nexport const fetchPostmanDatas: Endpoint = (params: RequestInit = {}) =>\n  fetch(\n    `https://iati.cloud/static/postman/${process.env.REACT_APP_DOC_FILENAME}`,\n    {\n      method: 'GET',\n      ...params,\n    }\n  ).then((res) => res.json());\n\nexport interface RequestModel {\n  method: string;\n  header?: any[];\n  url: UrlModel;\n  description?: string;\n}\n\nexport interface RequestsModel {\n  activeRequest: RequestModel;\n  showRequest: Action<RequestsModel, RequestModel>;\n}\n\nexport const requestsModel: RequestsModel = {\n  activeRequest: {\n    method: 'GET',\n    header: [],\n    url: {\n      raw:\n        '{{url}}/api/activities/?sector_category=111&format=json&fields=title,sectors,id',\n      host: ['{{url}}'],\n      path: ['api', 'activities', ''],\n      query: [\n        {\n          key: 'sector_category',\n          value: '111',\n        },\n        {\n          key: 'format',\n          value: 'json',\n        },\n        {\n          key: 'fields',\n          value: 'title,sectors,id',\n        },\n      ],\n    },\n  },\n  showRequest: action((state, payload) => {\n    state.activeRequest = payload;\n  }),\n};\n\nexport type UrlModel = {\n  raw: string;\n  host?: string[];\n  path?: string[];\n  query?: QueryModel[];\n};\n\nexport type QueryModel = {\n  key: string;\n  value: string;\n  type?: string;\n  disabled?: boolean;\n  description?: string;\n};\n\nexport type ProtocolProfileBehavior = {\n  disableBodyPruning: boolean;\n};\n\nexport interface DocStoreModel extends ApiModel<Collection> {\n  collection: Collection;\n  request: RequestsModel;\n  // postmanData: PostmanRoot;\n}\n\nexport interface Collection {\n  info: Info;\n  item: MainCategoryModel[];\n}\n\nexport interface Info {\n  id: string;\n  name: string;\n  description: string;\n  schema: string;\n}\n\nexport interface MainCategoryModel {\n  name: string;\n  item: SubCategory1Model[];\n  id?: string;\n  description?: string;\n}\n\nexport interface SubCategory1Model {\n  name: string;\n  id: string;\n  protocolProfileBehavior?: ProtocolProfileBehavior;\n  request?: RequestModel;\n  item?: SubCategory2Model[];\n  _postman_isSubFolder?: boolean;\n  description?: string;\n}\n\nexport interface SubCategory2Model {\n  name: string;\n  id: string;\n  protocolProfileBehavior?: ProtocolProfileBehavior;\n  request?: RequestModel;\n  item?: SubCategory3Model[];\n  description?: string;\n  _postman_isSubFolder?: boolean;\n}\n\nexport interface SubCategory3Model {\n  name: string;\n  id: string;\n  protocolProfileBehavior: ProtocolProfileBehavior;\n  request: RequestModel;\n  description?: string;\n}\n","//cc:api documentation module#; state - store\nimport { createStore, createTypedHooks } from 'easy-peasy';\nimport {\n  DocStoreModel,\n  fetchPostmanDatas,\n  requestsModel,\n} from 'app/modules/documentation-module/state/model';\nimport { docData } from 'app/modules/documentation-module/state/data';\nimport api from 'app/state/api';\n\nconst docStoreModel: DocStoreModel = {\n  /* todo: adjust and remove */\n  // @ts-ignore\n  collection: docData.collection,\n  request: requestsModel,\n  ...api(fetchPostmanDatas),\n};\n\nconst docStore = createStore(docStoreModel);\n\nconst typedHooks = createTypedHooks<DocStoreModel>();\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreState = typedHooks.useStoreState;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\n\nexport default docStore;\n","export const docData = {\n  collection: {\n    item: [\n      {\n        description:\n          ' Returns a list of IATI Activities stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` activities in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'a571c294-861f-4286-b054-bcf61e1c5545',\n        item: [\n          {\n            _postman_id: 'a01662dc-60f7-400d-bc31-a3e66ff1caa3',\n            _postman_isSubFolder: true,\n            item: [\n              {\n                _postman_isSubFolder: true,\n                name: 'has_{field_name} (optional)',\n                description:\n                  'Only activities that have specified fields will return. The parameter value is boolean, `True` or `False`.\\nThis filter can be applied on the following fields:\\n- `crs_add`\\n- `other_identifier`\\n- `contact_info`\\n- `activity_scope`\\n- `recipient_country`\\n- `recipient_region`\\n- `location`\\n- `sector`\\n- `tag`\\n- `country_budget_item`\\n- `humanitarian_scope`\\n- `policy_marker`\\n- `collaboration_type`\\n- `default_flow_type`\\n- `default_finance_type`\\n- `default_aid_type`\\n- `default_tied_status`\\n- `budget`\\n- `planned_disbursement`\\n- `capital_spend`\\n- `document_link`\\n- `related_activity`\\n- `legacy_data`\\n- `condition`\\n- `result`\\n- `fss`\\n',\n                item: [\n                  {\n                    name: 'has_crs_add (optional)',\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Filters `activities` by whether `crs-add` is present. The parameter value is boolean `True` or `False`.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'has_crs_add',\n                            value: 'True',\n                          },\n                          {\n                            key: 'fields',\n                            value: 'title,crs_add',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/activities/?has_crs_add=True&fields=title,crs_add&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'activities', ''],\n                      },\n                    },\n                    _postman_id: '06dd9650-7c64-4be0-9b9c-6c945e767f7f',\n                  },\n                  {\n                    name: 'has_other_identifier (optional)',\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Filters `activities` by whether `other-identifier` is present. The parameter value is boolean `True` or `False`.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'has_other_identifier',\n                            value: 'True',\n                          },\n                          {\n                            key: 'fields',\n                            value: 'title,other_identifier',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/activities/?has_other_identifier=True&fields=title,other_identifier&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'activities', ''],\n                      },\n                    },\n                    _postman_id: 'd6c2a21e-132f-4b55-bb8f-8becb7385c57',\n                  },\n                  {\n                    name: 'has_contact_info (optional)',\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Filters `activities` by whether `contact-info` is present. The parameter value is boolean `True` or `False`.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'has_contact_info',\n                            value: 'True',\n                          },\n                          {\n                            key: 'fields',\n                            value: 'title,contact_info',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/activities/?has_contact_info=True&fields=title,contact_info&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'activities', ''],\n                      },\n                    },\n                    _postman_id: 'c8d60ba6-46b6-408f-ab73-375dfd1ad383',\n                  },\n                  {\n                    name: 'has_activity_scope (optional)',\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Filters `activities` by whether `activity-scope` is present. The parameter value is boolean `True` or `False`.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'has_activity_scope',\n                            value: 'True',\n                          },\n                          {\n                            key: 'fields',\n                            value: 'title,activity_scope',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/activities/?has_activity_scope=True&fields=title,activity_scope&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'activities', ''],\n                      },\n                    },\n                    _postman_id: '8fe73454-a62a-42a0-a94b-77a6555800c7',\n                  },\n                  {\n                    name: 'has_recipient_country (optional)',\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Filters `activities` by whether `recipient-country` is present. The parameter value is boolean `True` or `False`.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'has_recipient_country',\n                            value: 'True',\n                          },\n                          {\n                            disabled: true,\n                            key: 'fields',\n                            value: 'title',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/activities/?has_recipient_country=True&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'activities', ''],\n                      },\n                    },\n                    _postman_id: '6cf2a29c-a81e-4c49-ac08-868e8faee5ee',\n                  },\n                  {\n                    name: 'has_recipient_region (optional)',\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Filters `activities` by whether `recipient-region` is present. The parameter value is boolean `True` or `False`.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'has_recipient_country',\n                            value: 'False',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/activities/?has_recipient_country=False&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'activities', ''],\n                      },\n                    },\n                    _postman_id: '8ebc02cc-123f-4e04-8009-0ad36897f0ef',\n                  },\n                ],\n                _postman_id: 'dcfadf7b-89b3-4b91-ba0a-5fdbd06286dd',\n              },\n              {\n                name: 'iati_identifier (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'iati_identifier',\n                        value: 'CA-3-A035529001',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xml',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'fields',\n                        value: 'all',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?iati_identifier=CA-3-A035529001',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '86e36c61-6910-47eb-acad-f4b1666cc03a',\n              },\n              {\n                name: 'activity_scope(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of activity scope codes. Returns `activities` that include given activity scope code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'activity_scope',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'activity_scope',\n                        value: '2',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=activity_scope&format=json&activity_scope=2',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '76eb8233-6df9-42b0-8b9c-e4870a03e42a',\n              },\n              {\n                name: 'recipient_country(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of ISO2 country codes. Returns `activities` that include given recipient country code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'recipient_country',\n                        value: 'SL,MM',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'iati_identifier,title',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?format=json&recipient_country=SL,MM&fields=iati_identifier,title',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '1f0ef862-9f4d-4b78-b7da-e6df2aef2749',\n              },\n              {\n                name: 'recipient_region(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of region codes. Returns `activities` that include given recipient region codes(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'recipient_regions,title',\n                      },\n                      {\n                        key: 'recipient_region',\n                        value: '998,589',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?format=json&fields=recipient_regions,title&recipient_region=998,589',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'd28628f9-f8a4-4f31-8939-c340a795e90d',\n              },\n              {\n                name: 'sector(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'Comma separated list of 5-digit sector codes.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'sector',\n                        value: '41030',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,sectors',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?sector=41030&format=json&fields=title,sectors',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'b5e7a349-d070-4c2c-a7fe-4f3eec56f804',\n              },\n              {\n                name: 'sector_category (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of 3-digit sector codes. Returns `activities` that include given sector code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'sector_category',\n                        value: '111',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,sectors,id',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?sector_category=111&format=json&fields=title,sectors,id',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '116625a0-8467-4460-8468-f17c1bdb07d4',\n              },\n              {\n                name: 'reporting_organisation_identifier (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of IATI Organisation Identifiers. Returns `activites` reported by these organisation(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation&format=json&reporting_organisation_identifier=DE-1',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '6c145edc-d015-4d2b-9521-6e986f73baea',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'd42107c6-63f8-4df5-9d00-2a3ebf65abf9',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_type',\n                        value: '10',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation&format=json&reporting_organisation_type=10',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                name: 'reporting_organisation_type (optional)',\n              },\n              {\n                name: 'participating_organisation(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of IATI Organisation Identifiers. Returns `activities` where the given organisation is reported as a participating organisation.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'title,participating_organisations',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'participating_organisation',\n                        value: 'AU-5',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=title,participating_organisations&format=json&participating_organisation=AU-5',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '3d465b34-16ce-4a27-bb02-b99a534e20de',\n              },\n              {\n                name: 'total_budget_lte(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with a total budget that is less than or equal to the given value.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'total_budget_lte',\n                        value: '10000',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier,budgets',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?total_budget_lte=10000&fields=id,iati_identifier,budgets&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '3f20a2ca-0a7a-4457-9524-e435cbee9dc2',\n              },\n              {\n                name: 'total_budget_gte(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with a total budget that is greater than or equal to the given value.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'total_budget_gte',\n                        value: '1000000',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier,budgets',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?total_budget_gte=1000000&fields=id,iati_identifier,budgets&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '60f2a488-c7fe-4a38-8fb5-b2cf8a9937fc',\n              },\n              {\n                name: 'planned_start_date_lte(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with a planned start date that is equal to or earlier than the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'planned_start_date_lte',\n                        value: '2000-03-24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?planned_start_date_lte=2000-03-24&fields=id,iati_identifier&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'c8b9d713-43b8-4b65-a5d7-034abaad22dd',\n              },\n              {\n                name: 'planned_start_date_gte(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with a planned start date that is equal to or later than the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'planned_start_date_gte',\n                        value: '2000-03-24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?planned_start_date_gte=2000-03-24&fields=id,iati_identifier&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '1e862287-b7a5-4f5e-87cd-e9999a9ba746',\n              },\n              {\n                name: 'actual_start_date_lte(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with an actual start date that is equal to or earlier than the gfiven value. Date must  be in `YYYY-MM-DD`',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'actual_start_date_lte',\n                        value: '2000-03-24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?actual_start_date_lte=2000-03-24&fields=id,iati_identifier&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'f0fcded3-d01d-4645-8acb-3da5725e03b6',\n              },\n              {\n                name: 'actual_start_date_gte(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with an actual start date that is equal to or later than the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'actual_start_date_gte',\n                        value: '2012-03-24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?actual_start_date_gte=2012-03-24&fields=id,iati_identifier&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '4adee9c1-1215-407d-aad4-b0eb385292a0',\n              },\n              {\n                name: 'actual_end_date_lte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with an actual end date that is equal to or earlier than the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'actual_end_date_lte',\n                        value: '2000-03-24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?actual_end_date_lte=2000-03-24&fields=id,iati_identifier&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '9a4af9d1-0fd7-4f58-a95f-f47ea40a1db3',\n              },\n              {\n                name: 'actual_end_date_gte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` with an actual end date that is equal to or later than the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'actual_end_date_gte',\n                        value: '2000-03-24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?actual_end_date_gte=2000-03-24&fields=id,iati_identifier&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'cdffe295-e566-4373-8895-5ca79eb320ff',\n              },\n              {\n                name: 'activity_status(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of Activity Status codes. Returns `activities` with the given status code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'activity_status',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        key: 'activity_status',\n                        value: '1',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=activity_status&format=json&activity_status=1',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '4a4f0c67-c927-442f-9afb-08dab76e7d03',\n              },\n              {\n                name: 'hierarchy(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of activity hierarchies. Returns `activities` that are flagged as the given hierarchy.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'hierarchy,iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        key: 'hierarchy',\n                        value: '2',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=hierarchy,iati_identifier&format=json&hierarchy=2',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'db5c4cbb-469b-47b4-af98-7edde934a726',\n              },\n              {\n                name: 'related_activity_id(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of Activity IDs. Returns `activities` that report a related activity that has the given Activity ID(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'related_activity_id',\n                        value: 'BJ-IFU-6201300688700-RSG0123375-29295',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'iati_identifier,related_activities',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?related_activity_id=BJ-IFU-6201300688700-RSG0123375-29295&fields=iati_identifier,related_activities&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'c31b5791-db82-414b-bfe0-018384cec649',\n              },\n              {\n                name: 'related_activity_type(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of related activity type IDs. Returns `activities` that include a related activity that has the given related activity type code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'related_activity_type',\n                        value: '1',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'iati_identifier,related_activities',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?related_activity_type=1&fields=iati_identifier,related_activities&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'fdd24e8e-f6f4-42b5-ba45-28a73815d584',\n              },\n              {\n                name: 'related_activity_recipient_country(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of ISO2 country codes. Returns `activities` that include a related activity that has the given recipient country code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'related_activity_recipient_country',\n                        value: 'MM',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'iati_identifier,recipient_countries',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?related_activity_recipient_country=MM&format=json&fields=iati_identifier,recipient_countries',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '0b656b38-d91d-4623-9a07-e3182d917d17',\n              },\n              {\n                name: 'related_activity_recipient_region(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of region codes. Returns `activities` that include a related activity that has the given recipient region code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'related_activity_recipient_region',\n                        value: '89',\n                        description: 'Europe',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'iati_identifier,recipient_regions',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?related_activity_recipient_region=89&format=json&fields=iati_identifier,recipient_regions',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '268655f1-9615-4869-8c24-6e6790ff5dcc',\n              },\n              {\n                name: 'related_activity_sector(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of 5-digit sector codes. Returns `activities` that include a related activity that has the given sector code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'related_activity_sector',\n                        value: '41030',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'iati_identifier,title',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?related_activity_sector=41030&format=json&fields=iati_identifier,title',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '987a0710-e671-422f-b0a5-24ea257baf82',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'f56c2767-9fc0-4ccd-8072-c7457ea66589',\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of default aid type codes. Returns `activities` that include given defualt aid type code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'default_aid_type',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'default_aid_type',\n                        value: 'B01',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=default_aid_type&format=json&default_aid_type=B01',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                name: 'default_aid_type (optional)',\n              },\n              {\n                name: 'transaction_provider_activity(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of activity IDs. Returns `activities` where the given activity ID is included as a transaction provider activity.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'transaction_provider_activity',\n                        value: 'SE-0-UD/2017/14647/IU',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,transactions',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?transaction_provider_activity=SE-0-UD/2017/14647/IU&fields=title,transactions&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'c50f65ed-ac87-4bb6-b79e-d47658ade35d',\n              },\n              {\n                name: 'transaction_date_year',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separate list of years. Returns `activities` that include an transaction with a transaction date within the given year(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'transaction_date_year',\n                        value: '2000',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?transaction_date_year=2000&fields=title&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '01a400ac-98d7-411a-95ad-df1e403dae00',\n              },\n              {\n                name: 'budget_not_provided (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Comma separated list of budget not provided codes. Returns `activities` that include the given budget not provided code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'budget_not_provided',\n                        value: '3,1',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,budget_not_provided',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?budget_not_provided=3,1&fields=title,budget_not_provided&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '20c49cc8-c3d1-4c67-947d-f8b82288bda0',\n              },\n              {\n                name: 'humanitarian_scope_type (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` that include the given humanitarian scope type code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'humanitarian',\n                        value: '1',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,humanitarian',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?humanitarian=1&fields=title,humanitarian&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '66505a6b-729d-4127-aa64-5756dbe71ae3',\n              },\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Current available fields to display are:\\n* `url`\\n* `id`\\n* `iati_identifier`\\n* `reporting_organisation`\\n* `title`\\n* `descriptions`\\n* `participating_organisations`\\n* `other_identifier`\\n* `activity_status`\\n* `budget_not_provided`\\n* `activity_dates`\\n* `contact_info`\\n* `activity_scope`\\n* `recipient_countries`\\n* `recipient_regions`\\n* `locations`\\n* `sectors`\\n* `tag`\\n* `country_budget_items`\\n* `humanitarian`\\n* `humanitarian_scope`\\n* `policy_markers`\\n* `collaboration_type`\\n* `default_flow_type`\\n* `default_finance_type`\\n* `default_aid_type`\\n* `default_tied_status`\\n* `budgets`\\n* `planned_disbursements`\\n* `capital_spend`\\n* `transactions`\\n* `related_transactions`\\n* `document_links`\\n* `related_activities`\\n* `legacy_data`\\n* `conditions`\\n* `results`\\n* `crs_add`\\n* `fss`\\n* `last_updated_datetime`\\n* `xml_lang`\\n* `default_currency`\\n* `humanitarian`\\n* `hierarchy`\\n* `linked_data_uri`\\n* `secondary_reporter`\\n* `aggregations`\\n* `dataset`\\n* `publisher`\\n* `published_state`\\n* `transaction_types`\\n\\nYou can wrap them into a:\\n\\n`&fields=url,id,iati_identifier,reporting_organisation,title,descriptions,participating_organisations,other_identifier,activity_status,budget_not_provided,activity_dates,contact_info,activity_scope,recipient_countries,recipient_regions,locations,sectors,tags,country_budget_items,humanitarian,humanitarian_scope,policy_markers,collaboration_type,default_flow_type,default_finance_type,default_aid_type,default_tied_status,budgets,planned_disbursements,capital_spend,related_transactions,document_links,related_activities,legacy_data,conditions,results,crs_add,fss,last_updated_datetime,xml_lang,default_currency,humanitarian,hierarchy,linked_data_uri,secondary_reporter,aggregations,dataset,publisher,published_state,transaction_types`.\\n\\nTo cover them all in once. `&fields=all` is on the docket.\\nto get activities that have certain elements, use `has_{field}=True` parameter. For example, to get activities that have `crs_add` element in them, the endpoint is: `https://iatidatastore.iatistandard.org/api/activities/?has_crs_add=True&fields=crs_add&format=json`.\\n\\nIf the `fields` parameter is not specified or omitted, the default fields will be returned. The default fields are `iati_identifier`, `sectors`, `recipient_countries` and `recipient_regions`.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'title,crs_add',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=title,crs_add&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '2b2be05e-70f5-4799-b4d8-4767fa067b0b',\n              },\n              {\n                name: 'sector_vocabulary (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` that include the given sector vocabulary code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'sector_vocabulary',\n                        value: '1',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,budget_not_provided',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'http://iatidatastore.iatistandard.org/api/activities/?sector_vocabulary=1&fields=title,budget_not_provided&format=json',\n                    protocol: 'http',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '741fc018-1474-460a-8b5c-346f7ed480d6',\n              },\n              {\n                name: 'policy_marker (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` that include the given policy marker code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'policy_marker',\n                        value: '1',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'policy_markers',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?policy_marker=1&fields=policy_markers&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'fbd37963-34ac-4c17-8eed-7582d9283568',\n              },\n              {\n                name: 'participating_organisation_type (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` that include the given participating organisation type code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'participating_organisation_type',\n                        value: '24',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'participating_organisations',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'participating_organisation_role',\n                        value: '4',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?participating_organisation_type=24&fields=participating_organisations&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '87abf839-d8ed-4f1c-8627-49c0dc853c41',\n              },\n              {\n                name: 'participating_organisation_role (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `activities` that include the given participating organisation role code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'participating_organisation_role',\n                        value: '4',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'participating_organisations',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?participating_organisation_role=4&fields=participating_organisations&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '3b9d9ecb-57f4-4d4b-a0b7-f782a6ddaaff',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '7205e852-1b45-4b4e-bfef-8b951dbd8482',\n                request: {\n                  method: 'GET',\n                  description:\n                    'Return `activities` where `secondary-reporter` is `True`. Boolean parameter value of `true`, `True`, `True`, `true`, `1` or `0` can be passed.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'is_secondary_reporter',\n                        value: 'true',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?format=json&is_secondary_reporter=true&fields=reporting_organisation',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                name: 'is_secondary_reporter',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Text search',\n            description:\n              'API request may include `q` parameter. This parameter controls text search and contains expected value.\\n\\nBy default, searching is performed on the following fields. To search on subset of these fields the `q_fields` parameter can be used, like so; `q_fields=iati_identifier,title,description`.\\n\\n* `iati_identifier` the IATI identifier\\n* `title` narratives\\n* `description` narratives\\n* `recipient_country` recipient country code and name\\n* `recipient_region` recipient region code and name\\n* `reporting_org` ref and narratives\\n* `sector` sector code and name\\n* `document_link` url, category and title narratives\\n* `participating_org` ref and narratives\\n* `other_identifier` owner ref and narratives\\n* `contact_info` all narratives for organisation, department, person name, job title & mailing address\\n* `location` ref of location\\n* `country_budget_items` narrative of budget item description\\n* `policy_marker` narratives of policy marker\\n* `transaction` ref and narratives of description, provider organisation, receiver organisation\\n* `related_activity` ref of related activity\\n* `conditions` narratives of condition\\n* `result` narratives for result title, result description, result indicator title, result indicator description, result indicator period target comment, result indicator period actual comment.',\n            item: [\n              {\n                name: 'iati_identifier',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the IATI-Identifier field.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'NL-KVK-27108436-A-03055-02:XG',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'iati_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'q_lookup',\n                        value: 'startswith',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=NL-KVK-27108436-A-03055-02:XG&q_fields=iati_identifier&format=json&fields=title',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'c77dc66b-21eb-4c86-9697-6d3fd2134590',\n              },\n              {\n                name: 'title',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the Title field (narrative).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'FINANCIAL ',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=FINANCIAL &q_fields=title&format=json&fields=title',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'd053e879-b58f-4847-b2a7-ab7ad3452a4a',\n              },\n              {\n                name: 'description',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the Description field (narrative).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'support',\n                        description: 'text to search for',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'description',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'descriptions',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=support&q_fields=description&format=json&fields=descriptions',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '90dfad3a-5e32-4ccd-8058-1e3b602b610d',\n              },\n              {\n                name: 'recipient_country',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the recipient country field (name or code).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'Myanmar',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'recipient_country',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'recipient_countries,title',\n                      },\n                      {\n                        disabled: true,\n                        key: 'q_lookup',\n                        value: 'startswith',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=Myanmar&q_fields=recipient_country&format=json&fields=recipient_countries,title',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '5e634e8a-2807-494b-9237-5862c9e20347',\n              },\n              {\n                name: 'recipient_region',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the recipient region field (name or code).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '998 Developing countries, unspecified',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'recipient_region',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'recipient_regions',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        disabled: true,\n                        key: 'q_lookup',\n                        value: 'startswith',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=998 Developing countries, unspecified&q_fields=recipient_region&format=json&fields=recipient_regions',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '0d7dbb89-fb71-4234-84bb-fdd9f834b305',\n              },\n              {\n                name: 'reporting_org',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the reporting-org field (name or code).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'SE-0',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'reporting_org',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        disabled: true,\n                        key: 'q_lookup',\n                        value: 'startswith',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=SE-0&q_fields=reporting_org&format=json&fields=reporting_organisation',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '8934175a-92c6-4cf6-afa0-7fe41ed93f11',\n              },\n              {\n                name: 'sector',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the sector field (name or code).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '41030 Bio-diversity',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'sector',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'sectors',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=41030 Bio-diversity&q_fields=sector&format=json&fields=sectors',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'eb827c7b-6605-4679-8157-6ddc54599f54',\n              },\n              {\n                name: 'document_link',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the document link field (url, category or narratives).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'Pre',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'document_link',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'document_links',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        disabled: true,\n                        key: 'q_lookup',\n                        value: 'startswith',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'document_link_category',\n                        value: 'A01',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=Pre&q_fields=document_link&format=json&fields=document_links',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'a1650a2e-da9c-4044-a9e6-88fe90b8f245',\n              },\n              {\n                name: 'participating_org',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the participating_org field (ref or narratives).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'DFID',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'participating_org',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'participating_organisations',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=DFID&q_fields=participating_org&format=json&fields=participating_organisations',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '891d543d-d3c1-42e3-9da6-32858174579a',\n              },\n              {\n                name: 'other_identifier',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the other_identifier field (owner_org, ref or narratives).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'iom',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'other_identifier',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'other_identifier',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=iom&q_fields=other_identifier&format=json&fields=other_identifier',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'a8877c4a-60ad-475b-a816-ec598ae56a96',\n              },\n              {\n                name: 'contact_info',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the contact_info field (narratives, organisation, department, person_name, job_title, mailing_address).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'iom',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'contact_info',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'contact_info',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=iom&q_fields=contact_info&format=json&fields=contact_info',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '5dde62e1-76a3-4943-ac7f-a7c734883e15',\n              },\n              {\n                name: 'location',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'Search for a term in the location field (ref).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'UG',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'location',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'locations',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=UG&q_fields=location&format=json&fields=locations',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '64245d74-2e0e-4a99-b084-f061252626bf',\n              },\n              {\n                name: 'country_budget_items',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the country budget items field (narrative).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'support',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'country_budget_items',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'country_budget_items',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=support&q_fields=country_budget_items&format=json&fields=country_budget_items',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '21f59bba-b486-490e-98c0-8d559ac2e546',\n              },\n              {\n                name: 'transaction',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the transaction field (`description narrative`, `provider_organisation`, `receiver_organisation`).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'support',\n                        description: 'text to search\\n',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'transaction',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'transactions,id',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=support&q_fields=transaction&format=json&fields=transactions,id',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '461e7191-d5ed-4ff0-96af-a5ed460b859e',\n              },\n              {\n                name: 'policy_marker',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the policy marker field (narrative).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'Targeting the Objectives',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'policy_marker',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'policy_markers',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=Targeting the Objectives&q_fields=policy_marker&format=json&fields=policy_markers',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '0b625958-7389-4863-8bb6-6337b437d35d',\n              },\n              {\n                name: 'related_activity',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the related_activity field (ref).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'AU',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'related_activity',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'related_activities',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=AU&q_fields=related_activity&format=json&fields=related_activities',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '41949dd2-66eb-4deb-81bc-0f5570a939d9',\n              },\n              {\n                name: 'conditions',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the conditions field (narrative).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'aid',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'conditions',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'conditions',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=aid&q_fields=conditions&format=json&fields=conditions',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '2181c7b5-eaad-4b17-8b20-d69bcf69a317',\n              },\n              {\n                name: 'result',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Search for a term in the result field (`title`, `description`, `indicator_title`, `indicator_description`, `indicator_period_target_comment`, `result_indicator_period_actual_comment`).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'The distance between ',\n                      },\n                      {\n                        key: 'q_fields',\n                        value: 'result',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'results',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?q=The distance between &q_fields=result&format=json&fields=results',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'd02f4c83-fbff-43d0-adc7-f52f3f81a3b4',\n              },\n            ],\n            _postman_id: '89954afa-be7c-40f0-8124-57daa92108b2',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Ordering',\n            description:\n              \"API request may include `ordering` parameter. This parameter controls the order in which results are returned.\\n\\nResults can be ordered by the following fields. The user may also specify reverse orderings by prefixing the field name with '-', like so: `-title`\\n\\n\",\n            item: [\n              {\n                name: 'title',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'title',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=title&format=json&reporting_organisation_identifier=DE-1&ordering=title',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'b23ea775-cfec-4ef5-a8a8-3535289e186f',\n              },\n              {\n                name: 'planned_start_date',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'planned_start_date',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=title&format=json&reporting_organisation_identifier=DE-1&ordering=planned_start_date',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '41bf1464-f4b0-4427-a517-3026c09e7153',\n              },\n              {\n                name: 'actual_start_date',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'actual_start_date',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=actual_start_date',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '202b234f-53f1-4011-ae05-0d9c1fc7a05b',\n              },\n              {\n                name: 'planned_end_date',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'planned_end_date',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=planned_end_date',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'c7d93b8e-2412-4dd9-bdc7-ec9128dd67f4',\n              },\n              {\n                name: 'actual_end_date',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'actual_end_date',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=actual_end_date',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '33b5638e-2bb4-4449-a315-7be2694839c7',\n              },\n              {\n                name: 'start_date',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    '`start_date` is `actual_start_date` if it is available, otherwise `start_date` is `planned_start_date`.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'start_date',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=start_date',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '0cdabed6-8cc4-456a-86d5-53dfe60d93ad',\n              },\n              {\n                name: 'end_date',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    '`end_date` is `actual_end_date` if it is available, otherwise `end_date` is `planned_end_date`.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'end_date',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=end_date',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: 'ad20c5b7-2cd7-4c49-8995-f195c26619c6',\n              },\n              {\n                name: 'activity_budget_value',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'total_budget_gte',\n                        value: '1',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'activity_budget_value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'budgets',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?total_budget_gte=1&format=json&reporting_organisation_identifier=DE-1&ordering=activity_budget_value&format=json&fields=budgets',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '0df4ddfa-6b12-4eda-ba2a-d8e4607e79ee',\n              },\n              {\n                name: 'activity_incoming_funds_value',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'activity_incoming_funds_value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=activity_incoming_funds_value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '72949e42-52a0-4ce3-82d1-fe5d6135502d',\n              },\n              {\n                name: 'activity_disbursement_value',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'activity_disbursement_value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=activity_disbursement_value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '8a72d621-3694-4d03-a794-fb7c2040a1d1',\n              },\n              {\n                name: 'activity_expenditure_value',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisation,title',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'DE-1',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'activity_expenditure_value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/?fields=reporting_organisation,title&format=json&reporting_organisation_identifier=DE-1&ordering=activity_expenditure_value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', ''],\n                  },\n                },\n                _postman_id: '8a5ec729-80e3-436d-bced-8901db6dad66',\n              },\n            ],\n            _postman_id: '94d48dd0-96c5-49aa-acef-d8b3f681d9b1',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Aggregation',\n            description:\n              'API request has to include `group_by` parameter. Available options for `group_by` are:\\n\\n- `recipient_country`\\n- `recipient_region`\\n- `sector`\\n- `related_activity`\\n- `reporting_organisation`\\n- `participating_organisation`\\n- `participating_organisation_type`\\n- `document_link_category`\\n- `document_link_file_format`\\n- `activity_status`\\n\\n\\nAvailable `aggregation` are:\\n\\n-`count`\\n-`count_distinct`',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '1e808992-01e4-4366-b069-2e81b5398ec9',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'recipient_country',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=recipient_country&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'recipient_country',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '67d080cb-ec71-4094-aa7f-8c05b7bb27ca',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'recipient_region',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=recipient_region&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'recipient_region',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '1b6f6341-bfb5-4fa3-b6c4-96079dc5db5e',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'sector',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=sector&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'sector',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'a05cb1a3-530a-42da-8d81-f0ebe3a771f9',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'related_activity',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=related_activity&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'related_activity',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '2d90d809-6d52-4c84-b53d-25875fad79a3',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'reporting_organisation',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=reporting_organisation&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'reporting_organisation',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '5af3752f-bfd6-4362-be29-fd3534d50680',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'participating_organisation',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=participating_organisation&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'participating_organisation',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '4d43ebc7-ade5-405c-81ef-90ec96583884',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'participating_organisation_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=participating_organisation_type&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'participating_organisation_type',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '3136e037-3fd1-44b0-892a-4771ba431f6c',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'document_link_category',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=document_link_category&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'document_link_category',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '8f2d4d45-127d-4a49-bb8b-6f40c9725cfe',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'document_link_file_format',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=document_link_file_format&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'document_link_file_format',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'b7a3df9f-98e8-486a-a1cd-e169b57c4edc',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'activity_status',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/aggregations/?format=json&group_by=activity_status&aggregations=count',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'aggregations', ''],\n                  },\n                },\n                name: 'activity_status',\n              },\n            ],\n            _postman_id: '31cdfaed-8f8b-4a5b-a38b-a29268eda929',\n          },\n          {\n            name: 'activities',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'Each item contains summarized information on the activity being shown, including the URI to activity details, which contain all information. To show more information in list view the fields parameter can be used. Example; `fields=activity_id,title,country,any_field`.',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                  },\n                  {\n                    disabled: true,\n                    key: 'fields',\n                    value: 'locations',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/activities/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'activities', ''],\n              },\n            },\n            _postman_id: 'debbe231-72a6-46a8-8974-6fb636c9dfcf',\n          },\n          {\n            name: 'Activity CSV export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'This request is for Activity CSV export. \\n\\nNote -  Activities are exploded according to the number of sectors in that activity. For example, if ther are three sectors in an activity, there would be 3 rows for each sector for parent activity. \\nThere will be 13 columns for transaction types. Related transaction value is aggregated in respective columns.\\n\\nMultiple `recipient_countries` or `recipient_regions` could be in one cell if parent `activity` has multiple of them.\\n\\n## Default columns\\nThe following columns are default for CSV export. Other fields in the activity can be specified in `fields` parameter.\\n\\n* `iati_identifier`\\n* `sectors`\\n* `recipient_regions`\\n* `recipient_countries`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'csv',\n                  },\n                  {\n                    key: 'fields',\n                    value: 'descriptions,title,transaction_types',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/activities/?format=csv&fields=descriptions,title,transaction_types',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'activities', ''],\n              },\n            },\n            _postman_id: '4e4ea614-7e9e-4186-a0a7-e73320509fc1',\n          },\n          {\n            name: 'Activity XLS export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'xls',\n                  },\n                  {\n                    key: 'fields',\n                    value: 'descriptions,title,transaction_types',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/activities/?format=xls&fields=descriptions,title,transaction_types',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'activities', ''],\n              },\n            },\n            _postman_id: '165ecf08-69d3-47c8-9fb9-c5d584c1d26a',\n          },\n          {\n            name: 'Activity XML export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'xml',\n                  },\n                  {\n                    key: 'fields',\n                    value: 'all',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/activities/?format=xml&fields=all',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'activities', ''],\n              },\n            },\n            _postman_id: '5af912d5-8a24-4495-a938-24f6c810bade',\n          },\n        ],\n        name: 'Activity List  ',\n      },\n      {\n        description:\n          'Returns detailed information of the activity specified by `iati-identifier` of the activity.\\n\\n## URL format\\n`/api/activities/{iati-identifier}`\\n\\n',\n        _postman_id: 'c466f1e0-e81e-43ad-8105-488370379d3c',\n        item: [\n          {\n            _postman_id: '0624381f-a5b4-4840-b84d-b50575992ade',\n            _postman_isSubFolder: true,\n            item: [\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Only comma seperated selected fields will be displayed. The available fiels are:\\n\\n* `url`\\n* `id`\\n* `iati_identifier`\\n* `reporting_organisation`\\n* `title`\\n* `descriptions`\\n* `participating_organisations`\\n* `other_identifier`\\n* `activity_status`\\n* `budget_not_provided`\\n* `activity_dates`\\n* `contact_info`\\n* `activity_scope`\\n* `recipient_countries`\\n* `recipient_regions`\\n* `locations`\\n* `sectors`\\n* `tags`\\n* `country_budget_items`\\n* `humanitarian`\\n* `humanitarian_scope`\\n* `policy_markers`\\n* `collaboration_type`\\n* `default_flow_type`\\n* `default_finance_type`\\n* `default_aid_type`\\n* `default_tied_status`\\n* `budgets`\\n* `planned_disbursements`\\n* `capital_spend`\\n* `transactions`\\n* `related_transactions`\\n* `document_links`\\n* `related_activities`\\n* `legacy_data`\\n* `conditions`\\n* `results`\\n* `crs_add`\\n* `fss`\\n* `last_updated_datetime`\\n* `xml_lang`\\n* `default_currency`\\n* `humanitarian`\\n* `hierarchy`\\n* `linked_data_uri`\\n* `secondary_reporter`\\n* `aggregations`\\n* `dataset`\\n* `publisher`\\n* `published_state`\\n* `transaction_types`\\n\\n\\nMaximum of 100 `related_transactions` will display in `activity` endpoint. If an `activity` has more than 100 `related-transactions`, `transaction` endpoint should be used.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'title,iati_identifier',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/activities/GB-CHC-285776-DRC429?format=json&fields=title,iati_identifier',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'activities', 'GB-CHC-285776-DRC429'],\n                  },\n                },\n                _postman_id: '0835e9ad-a1a1-4bac-83f3-d0bb7bde6fd5',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'activity details',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/activities/GB-CHC-285776-DRC429/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'activities', 'GB-CHC-285776-DRC429', ''],\n              },\n            },\n            _postman_id: '80a667ba-cdfc-4c76-b120-bfaa2df80dc7',\n          },\n        ],\n        name: 'Activity Detail',\n      },\n      {\n        description:\n          ' Returns a list of IATI Datasets stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` Dataset in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'f9a14857-4401-40f9-9560-fc82ef6c6cbb',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '58020886-e5b8-41c3-be4d-555c8f038485',\n            item: [\n              {\n                name: 'name (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'Returns datasets with the given name(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'name',\n                        value: '111111_publisher-activities',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/datasets/?name=111111_publisher-activities&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'datasets', ''],\n                  },\n                },\n                _postman_id: 'cc33b761-0b98-47b8-a2bb-ede76efd81b3',\n              },\n              {\n                name: 'filetype (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Filter datasets by type (activity or organisation).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'filetype',\n                        value: '2',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/datasets/?filetype=2&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'datasets', ''],\n                  },\n                },\n                _postman_id: 'e31be94f-2de3-48ab-b43f-a7fa27f5b379',\n              },\n              {\n                name: 'publisher (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns datasets published by the given Publisher ID(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'publisher',\n                        value: '752',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/datasets/?publisher=752&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'datasets', ''],\n                  },\n                },\n                _postman_id: 'e244460d-88f0-455a-bfc9-01a4be86a450',\n              },\n              {\n                name: 'publisher_identifier (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns datasets published by the given IATI Organisation ID(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'publisher_identifier',\n                        value: 'BE-BCE_KBO-0421210424',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/datasets/?publisher_identifier=BE-BCE_KBO-0421210424&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'datasets', ''],\n                  },\n                },\n                _postman_id: '7d73b93f-d0b2-40ef-9e2c-cd4a46946c21',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Ordering',\n            description:\n              \"API request may include `ordering` parameter. This parameter controls the order in which results are returned.\\n\\nResults can be ordered by all displayed fields except `activities `, `activity_count`, `file_type` and `internal_url`.\\n\\nThe user may also specify reverse orderings by prefixing the field name with '-', like so: `-publisher`.\",\n            item: [\n              {\n                name: 'Dataset ordered by publisher.',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'This is just an example request. DataSet can be ordered by by `name`,`title`,`filetype`,`publisher`,`url`,`source_url`,`activities`,`activity_count`, `date_created`, `date_updated`, `last_found_in_registry`, `iati_version`.  ',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'ordering',\n                        value: 'publisher',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/datasets/?format=json&ordering=publisher',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'datasets', ''],\n                  },\n                },\n                _postman_id: 'daa9d26a-cae5-49b2-bbcd-f57745db291f',\n              },\n            ],\n            _postman_id: 'e0d9393d-b0ef-459a-af37-4e67b26ce908',\n          },\n          {\n            name: 'dataset',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/datasets/{name}`\\n\\n',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '3',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/datasets/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'datasets', ''],\n              },\n            },\n            _postman_id: 'cc023ff7-557f-4f35-9205-d432034fb667',\n          },\n        ],\n        name: 'Dataset List',\n      },\n      {\n        description:\n          ' Returns a list of Budgets stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` budgets in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'ce004c9e-f9a8-480b-8ac2-3eb39fe9f4bb',\n        item: [\n          {\n            _postman_id: '71b08b4b-e081-4697-811e-044084c93699',\n            _postman_isSubFolder: true,\n            item: [\n              {\n                name: 'activity_scope (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `budgets` within `activities` with the given activity scope code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'activity_scope',\n                        value: '1',\n                      },\n                      {\n                        disabled: true,\n                        key: 'fields',\n                        value: 'activity_scope',\n                        type: 'text',\n                      },\n                      {\n                        key: 'has_activity_scope',\n                        value: 'True',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&activity_scope=1&has_activity_scope=True',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                _postman_id: '6978803d-3f9b-47fc-be80-4c341890abf2',\n              },\n              {\n                name: 'document_link_category (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `budgets` within `activities` with the given document link category code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'document_link_category',\n                        value: 'A01',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&document_link_category=A01',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                _postman_id: '3442494a-3219-4d55-9f84-7555d3099899',\n              },\n              {\n                name: 'planned_start_date_lte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `budgets` within `activities` with a planned start date which is less than or equal to the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'planned_start_date_lte',\n                        value: '2004-03-24',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&planned_start_date_lte=2004-03-24',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                _postman_id: 'ecc2f95f-3bb8-44fe-b767-d92aa0eb7684',\n              },\n              {\n                name: 'planned_start_date_gte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `budgets` within `activities` with a planned start date which is greater than or equal to the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'planned_start_date_gte',\n                        value: '2004-03-24',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&planned_start_date_gte=2004-03-24',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                _postman_id: '71591656-7bb0-4a22-b4a0-77222c597f51',\n              },\n              {\n                name: 'actual_start_date_lte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `budgets` within `activities` with an actual start date which is less than or equal to the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'actual_start_date_lte',\n                        value: '2004-03-24',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&actual_start_date_lte=2004-03-24',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                _postman_id: 'ed1b9fc6-1c4f-4c87-b11e-e20631f436ac',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'c72f327e-175b-4281-8cc1-8f4da44e20b1',\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `budgets` within `activities` which include the given particpating_organisation(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'participating_organisation',\n                        value: 'XM-DAC-41114',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&participating_organisation=XM-DAC-41114',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                name: 'participating_organisation (optional)',\n              },\n              {\n                name: 'fields (option)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Available fields are:\\n* `value`\\n* `type`\\n* `status`\\n* `activity`\\n* `period_start`\\n* `period_end`\\n* `activity_id`\\n\\n\\nThe default fields are:\\n* `iati_identifier`\\n* `sectors`\\n* `recipient_regions`\\n* `budgets`\\n\\nTo get all fields, use `fields=all` parameter.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'all',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/?format=json&fields=all',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', ''],\n                  },\n                },\n                _postman_id: '5f25e829-6a0b-4b59-9869-a63da1d70723',\n              },\n            ],\n            name: 'request parameters',\n          },\n          {\n            name: 'budget',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                  {\n                    key: 'page',\n                    value: '3',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/budgets/?format=json&page=3',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'budgets', ''],\n              },\n            },\n            _postman_id: 'b91795e7-48ca-4e4f-a73e-d636b358a393',\n          },\n          {\n            name: 'budget CSV export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'csv',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/budgets/?format=csv',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'budgets', ''],\n              },\n            },\n            _postman_id: '91852139-7f05-499d-855d-cb98d96af65d',\n          },\n        ],\n        name: 'Budget List',\n      },\n      {\n        description:\n          'Returns aggregations based on the item grouped by, and the selected aggregation.',\n        _postman_id: '7aec9394-6b33-40a4-a492-d9260f8e4b22',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            name: 'Group by options',\n            description:\n              'API request has to include `group_by` parameter.\\n\\nThis parameter controls result aggregations and can be one or more (comma separated values) of:',\n            item: [\n              {\n                name: 'recipient_country',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'recipient_country',\n                        value: 'BD,MM',\n                      },\n                      {\n                        key: 'group_by',\n                        value: 'recipient_country',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?recipient_country=BD,MM&group_by=recipient_country&aggregations=count,activity_count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '59797d79-7a1b-4ac1-b2e4-e7031777e8ec',\n              },\n              {\n                name: 'recipient_region',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'recipient_region',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'recipient_region',\n                        value: '380,619',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=recipient_region&aggregations=count,activity_count,value&format=json&recipient_region=380,619',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '72a57100-292d-4dcd-ba44-935b47776335',\n              },\n              {\n                name: 'sector',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'sector',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'sector',\n                        value: '41030',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=sector&aggregations=count,activity_count,value&format=json&sector=41030',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '2ea55de9-8814-49ef-b97d-b71d4e8464ba',\n              },\n              {\n                name: 'related_activity',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'related_activity',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'related_activity_id',\n                        value: 'BJ-IFU-6201300688700-RSG0123375-29295',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=related_activity&aggregations=count,activity_count,value&format=json&related_activity_id=BJ-IFU-6201300688700-RSG0123375-29295',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'fcc51529-2b07-42fd-ac2a-ff2eba040105',\n              },\n              {\n                name: 'reporting_organisation',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'reporting_organisation',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'GB-CHC-285776',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=reporting_organisation&aggregations=count,activity_count,value&format=json&reporting_organisation_identifier=GB-CHC-285776',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'cc1c23a2-a4fa-4f61-88d6-6f0dfcae48ae',\n              },\n              {\n                name: 'participating_organisation',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'participating_organisation',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=participating_organisation&aggregations=count,activity_count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'd140f395-3fc5-4364-a2d6-7a3e5af6e66f',\n              },\n              {\n                name: 'participating_organisation_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'participating_organisation_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'participating_organisation',\n                        value: 'AU-5',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=participating_organisation_type&aggregations=count,activity_count,value&format=json&participating_organisation=AU-5',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '37710c65-a814-448e-9c49-c2bc1a1ca939',\n              },\n              {\n                name: 'document_link_category',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'document_link_category',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'US-USAGOV',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=document_link_category&aggregations=count,activity_count,value&format=json&reporting_organisation_identifier=US-USAGOV',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '3e86c2e1-ae31-4b14-8766-41dc30021872',\n              },\n              {\n                name: 'activity_status',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'activity_status',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                      },\n                      {\n                        key: 'activity_status',\n                        value: '1,2',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=activity_status&aggregations=count,activity_count,value&format=json&activity_status=1,2',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '6206bb21-c651-4efe-a1fc-f1bada816141',\n              },\n              {\n                name: 'collaboration_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'collaboration_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'collaboration_type',\n                        value: '1,2',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=collaboration_type&aggregations=count,activity_count,value&format=json&collaboration_type=1,2',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '76657154-15e7-4f12-b2a1-0a40c6542a86',\n              },\n              {\n                name: 'budget_period_start_year',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'budget_period_start_year',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=budget_period_start_year&aggregations=count,activity_count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '12df3ba1-29f0-410c-af2e-9c5963e2fa22',\n              },\n              {\n                name: 'budget_period_end_year',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'budget_period_end_year',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=budget_period_end_year&aggregations=count,activity_count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'f8f372a2-3f2c-4eb2-9e7a-4315d59a7290',\n              },\n              {\n                name: 'budget_period_end_quarter',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'budget_period_end_quarter',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=budget_period_end_quarter&aggregations=count,activity_count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'd2e629b7-0a3f-4e9b-bd87-e34ead6d8d14',\n              },\n              {\n                name: 'budget_period_start_month',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'budget_period_start_month',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/budgets/aggregations/?group_by=budget_period_start_month&aggregations=count,activity_count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'budgets', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '5ae5c1a6-73c5-4480-a02c-2d7f3bc8a3e1',\n              },\n            ],\n            _postman_id: '7ca3d11e-5074-4701-98cc-985fb742a604',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Aggregation options',\n            description:\n              'API request has to include `aggregations` parameter.\\n\\nThis parameter controls result aggregations and can be one or more (comma separated values) of:\\n\\n* `count` Count of budgets\\n* `activity_count` Count of activities\\n* `value` Sum of budget value (in the selected currency)',\n            item: [],\n            _postman_id: 'b0a5dd83-c85e-4d4b-9b10-7b9d29d9837b',\n          },\n        ],\n        name: 'Budget Aggregations',\n      },\n      {\n        description:\n          'Returns a list of IATI Codelists stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` codelists in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'd9b0fdd9-f3b9-4022-b108-96f447ca4015',\n        item: [\n          {\n            name: 'codelist',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/codelists/{codelistname}/`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/codelists/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'codelists', ''],\n              },\n            },\n            _postman_id: 'c3d7c3d2-c7b1-487a-acfb-e2a147dec68e',\n          },\n          {\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            _postman_id: 'a254103b-f6d6-4b84-ae31-f0e1b8bdc6a4',\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/codelists/ActivityDateType/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'codelists', 'ActivityDateType', ''],\n              },\n            },\n            name: 'CodeList Detail',\n          },\n        ],\n        name: 'Codelist Meta List',\n      },\n      {\n        description:\n          'Returns a list of IATI Countries stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` countries in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: '859039a9-182c-45ac-9803-0b6f0e1d4c67',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '8088e93a-fe65-4b11-9e82-023097fcff82',\n            item: [\n              {\n                name: 'code (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `countries` with given country code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'fields',\n                        value: 'region',\n                        type: 'text',\n                      },\n                      {\n                        key: 'code',\n                        value: 'GH',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/countries/?format=json&code=GH',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'countries', ''],\n                  },\n                },\n                _postman_id: '1661e668-c67e-405f-9880-3b58ccf0431c',\n              },\n              {\n                name: 'name (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'Returns `countries` with given name(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'name',\n                        value: 'Malaysia',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/countries/?name=Malaysia&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'countries', ''],\n                  },\n                },\n                _postman_id: '3447ad19-4e86-4484-911c-ad5d511231d5',\n              },\n              {\n                name: 'region_code (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'Returns `countries` with given region code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'region_code',\n                        value: '998',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/countries/?region_code=998&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'countries', ''],\n                  },\n                },\n                _postman_id: 'c4cc6198-c7ce-4f0b-b187-9eeed957066d',\n              },\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'List of fields to display.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'region,polygon',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'name',\n                        value: 'Myanmar',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/countries/?fields=region,polygon&format=json&name=Myanmar',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'countries', ''],\n                  },\n                },\n                _postman_id: '9786774f-8e83-498d-ba9a-09a26ff37906',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'country',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/counties/{country_id}`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '5',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '3',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/countries/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'countries', ''],\n              },\n            },\n            _postman_id: 'c7bc4615-ea23-4c10-b043-35a0fdf2831d',\n          },\n        ],\n        name: 'Country List',\n      },\n      {\n        description:\n          'Returns a list of IATI Locations stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` locations in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: '5dedc135-882a-475e-b847-e932bb0b2d94',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: 'f988522a-ef15-4577-a2d4-2e3c749259bd',\n            item: [\n              {\n                name: 'activity_status(optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `locations` within `activities` with the given activity status code(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'activity_status',\n                        value: '2',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'description,ref',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/locations/?activity_status=2&format=json&fields=description,ref',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'locations', ''],\n                  },\n                },\n                _postman_id: '69617f3f-99a3-43bd-ae88-df7a05a3c3cb',\n              },\n              {\n                name: 'organisation_iati_identifier',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `locations` for the given publisher(s) IATI Organisation ID.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'id,description,ref,reporting_organisations',\n                      },\n                      {\n                        key: 'organisation_iati_identifier',\n                        description: 'undp',\n                        value: 'XM-DAC-41114',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/locations/?format=json&fields=id,description,ref,reporting_organisations&organisation_iati_identifier=XM-DAC-41114',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'locations', ''],\n                  },\n                },\n                _postman_id: 'e8d3c9af-06da-48bf-adb6-4bf3bb357eb2',\n              },\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Available fields are:\\n* `id`\\n* `activity`\\n* `iati_identifier`\\n* `ref`\\n* `location_reach`\\n* `location_id`\\n* `name`\\n* `description`\\n* `activity_description`\\n* `administrative`\\n* `point`\\n* `exactness`\\n* `location_class`\\n* `feature_designation`\\n* `sectors`\\n* `recipient_countries`\\n* `recipient_regions`\\n* `reporting_organisations`',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'reporting_organisations',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/locations/?format=json&fields=reporting_organisations',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'locations', ''],\n                  },\n                },\n                _postman_id: 'ee714c9c-e053-40d6-826a-a1c382e68d15',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'location',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/locations/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'locations', ''],\n              },\n            },\n            _postman_id: '69300845-6c6a-42f8-98bb-9f9dba4c0dab',\n          },\n        ],\n        name: 'Location List',\n      },\n      {\n        description:\n          'Returns a list of IATI Organisations stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` organisation in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.\\n\\n',\n        _postman_id: 'ac53baeb-0d95-4d93-9cc9-527aa294e846',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '9c13351b-75c0-4c18-bb89-3c7c720f58ca',\n            item: [\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Available fields are:\\n* `url`\\n* `id`\\n* `published_state`\\n* `primary_name`\\n* `default_currency`\\n* `last_updated_datetime`\\n*  `xml_lang`\\n*  `organisation_identifier`\\n*  `name`\\n*  `reporting_org`\\n*  `total_budgets`\\n*  `recipient_org_budgets`\\n*  `recipient_region_budgets`\\n*  `recipient_country_budgets`\\n*  `total_expenditures`\\n*  `document_links`',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'primary_name,total_expenditures',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/?format=json&fields=primary_name,total_expenditures',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', ''],\n                  },\n                },\n                _postman_id: 'deabb358-2e66-466a-a2e3-8a32de69323a',\n              },\n              {\n                name: 'organisation_identifier (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns organisation file data for the given organisaition identifier(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'organisation_identifier',\n                        value: 'XM-DAC-41114',\n                        description: 'organisation_identifier for UNDP',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/?format=json&organisation_identifier=XM-DAC-41114',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', ''],\n                  },\n                },\n                _postman_id: '1912d51d-9ec6-43aa-9b11-df9659e32c2f',\n              },\n              {\n                name: 'name (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns organisation file data for the given organisation name(s).',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'name',\n                        value: 'Access to Seeds Foundation,Across',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/?format=json&name=Access to Seeds Foundation,Across',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', ''],\n                  },\n                },\n                _postman_id: '5ae48e7c-d15c-4c9b-b0e2-3544d9937c49',\n              },\n              {\n                name: 'is_reporting_organisation',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns organisation file data for organisations who are IATI publishers.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'is_reporting_organisation',\n                        value: 'True',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/?format=json&is_reporting_organisation=True',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', ''],\n                  },\n                },\n                _postman_id: '89f57839-20df-4b6c-a2a3-1ad083722e85',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Document-link List',\n            description:\n              'Returns a list of `organisation/document-link` stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` `organisation/document-link` in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'ea8d380d-3b66-4675-aeaf-92b3e7e54490',\n                request: {\n                  method: 'GET',\n                  description:\n                    '`document-link` can be filtered by  `organisation_identifier`.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'organisation_identifier',\n                        value: 'XM-DAC-6-4',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/document-link/?format=json&organisation_identifier=XM-DAC-6-4',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', 'document-link', ''],\n                  },\n                },\n                name: 'document-link',\n              },\n            ],\n            _postman_id: '9ec4b69a-d7ca-47b8-a6c9-80a35a4a015c',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Recipient-country-budget',\n            description:\n              'Returns a list of `organisation/recipient-country-budget` stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` `organisation/recipient-country-budget` in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'fd36976a-b657-4584-939e-e6d5a463ea9b',\n                request: {\n                  method: 'GET',\n                  description:\n                    '`recipient-country-budget` can be filtered by  `organisation_identifier`.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'organisation_identifier',\n                        value: 'XM-DAC-6-4',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/recipient-country-budget/?format=json&organisation_identifier=XM-DAC-6-4',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: [\n                      'api',\n                      'organisations',\n                      'recipient-country-budget',\n                      '',\n                    ],\n                  },\n                },\n                name: 'recipient-country-budget',\n              },\n            ],\n            _postman_id: '325af9b7-8ec1-4afa-8198-2ed3e81f4481',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Recipient-org-budget',\n            description:\n              'Returns a list of `organisation/recipient-org-budget` stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` `organisation/recipient-org-budget` in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'b415b8e5-eb9f-4f29-81dd-70736159a5c5',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'organisation_identifier',\n                        value: 'CA-3',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/recipient-org-budget/?format=json&organisation_identifier=CA-3',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', 'recipient-org-budget', ''],\n                  },\n                },\n                name: 'recipient-org-budget',\n              },\n            ],\n            _postman_id: 'add201f4-19a6-49fa-baba-ee2589bce69d',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Recipient-region-budget',\n            description:\n              'Returns a list of `organisation/document-link` stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` `organisation/document-link` in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n            item: [],\n            _postman_id: 'f96b23ce-5cbb-4de0-8604-b4689b61954a',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Total-budget',\n            description:\n              'Returns a list of `organisation/total-budget` stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` `organisation/total-budget` in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '37a4880e-e0ad-4afa-aec0-aec4064c0410',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'organisation_identifier',\n                        value: 'XM-DAC-6-4',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/organisations/total-budget/?format=json&organisation_identifier=XM-DAC-6-4',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'organisations', 'total-budget', ''],\n                  },\n                },\n                name: 'total-budget',\n              },\n            ],\n            _postman_id: 'e6bc0cfe-b2d1-4fbe-b7f6-d80269eb92d7',\n          },\n          {\n            name: 'organisation',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/organisations/{organisation_id}`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '2',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/organisations/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'organisations', ''],\n              },\n            },\n            _postman_id: 'ad95cfb0-eb8a-4486-9bff-c27475cc17d9',\n          },\n          {\n            name: 'organisation XML export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'xml',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/organisations/?format=xml',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'organisations', ''],\n              },\n            },\n            _postman_id: '3f0c2f94-3179-4d27-8267-804ef1c7f600',\n          },\n        ],\n        name: 'Organisation List',\n      },\n      {\n        description:\n          'Returns a list of IATI Publishers stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` publishers in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: '6da0541e-8eb4-4e6b-ae75-6f88dc40d1ff',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '77fdec00-7ca1-4305-8630-afa715970578',\n            item: [\n              {\n                name: 'reporting_organisation_identifier (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `publishers` with the given IATI Organisation ID.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'reporting_organisation_identifier',\n                        value: 'NL-KVK-3427895',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/publishers/?format=json&reporting_organisation_identifier=NL-KVK-3427895',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'publishers', ''],\n                  },\n                },\n                _postman_id: '425dd155-e457-484e-90b5-40eb7bf4f505',\n              },\n              {\n                name: 'display_name (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `publishers` with the given publisher name.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'display_name',\n                        value:\n                          'Koepel van de Vlaamse Noord-Zuidbeweging 11.11.11 VZW',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/publishers/?display_name=Koepel van de Vlaamse Noord-Zuidbeweging 11.11.11 VZW&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'publishers', ''],\n                  },\n                },\n                _postman_id: '84f368f6-f0ca-4f2f-95d9-c9ee704c5793',\n              },\n              {\n                name: 'name (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `publishers` with the given Publisher ID.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'name',\n                        value: '111111_publisher',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/publishers/?format=json&name=111111_publisher',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'publishers', ''],\n                  },\n                },\n                _postman_id: '0007d396-76fc-47b1-8f43-116974914a64',\n              },\n              {\n                name: 'is_active',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Filter by `publishers` who either have or have not published IATI data. The parameter value is boolean `True` or `False`.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'is_active',\n                        value: 'True',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/publishers/?format=json&is_active=True',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'publishers', ''],\n                  },\n                },\n                _postman_id: 'e286414a-f00d-4e2b-a57c-b16579c51b36',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'publisher',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/publishers/{publisher_iati_id}`\\n\\n',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '1',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/publishers/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'publishers', ''],\n              },\n            },\n            _postman_id: '471740fb-2a81-4ac8-8ad1-3cc0e00443e6',\n          },\n        ],\n        name: 'Publisher List',\n      },\n      {\n        description:\n          'Returns a list of IATI Regions stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` regions in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: '20d6bcd4-02fa-45a2-b85d-0e833368f3cf',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: 'cfc29c71-88f4-4006-9e95-4586c81a5256',\n            item: [\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'List of fields to display.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value:\n                          'location,name,region_vocabulary,parental_region',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/regions/?fields=location,name,region_vocabulary,parental_region&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'regions', ''],\n                  },\n                },\n                _postman_id: '0fbfb76e-f5cc-48b7-a71e-220eea4c6a34',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'region',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/regions/{region_id}`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '2',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/regions/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'regions', ''],\n              },\n            },\n            _postman_id: '9b0b6fc4-4e70-436d-ba42-462d291495b2',\n          },\n        ],\n        name: 'Region List',\n      },\n      {\n        description:\n          ' Returns a list of IATI Results stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` results in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'd5680d6e-227f-42ea-aee6-ce9c0a68a647',\n        item: [\n          {\n            _postman_id: 'c81edcf9-02e6-432e-9d70-e973f4255d6b',\n            _postman_isSubFolder: true,\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'a59411f3-0452-470d-ac49-3d6e55da92c1',\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `results` from activities with the given activity ID(s)',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'activity_id',\n                        value: 'BE-BCE_KBO-0421210424-KOEPELPROG2017-2021_SD3',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/results/?activity_id=BE-BCE_KBO-0421210424-KOEPELPROG2017-2021_SD3&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'results', ''],\n                  },\n                },\n                name: 'activity_id',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'result',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'fields',\n                    value: 'all',\n                  },\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '2',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/results/?fields=all&format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'results', ''],\n              },\n            },\n            _postman_id: 'e180e7fd-6055-4a09-b9f0-c57065e01ddc',\n          },\n        ],\n        name: 'Result List',\n      },\n      {\n        description:\n          'Returns aggregations based on the item grouped by, and the selected aggregation.\\n\\n',\n        _postman_id: 'c9dafa0c-b0e5-46fa-84bb-dc54c86491a6',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            name: 'Group by options',\n            description:\n              'This API request must include the `group_by` parameter.\\n\\nThis parameter controls result aggregations and can be one or more (comma separated values) of:\\n',\n            item: [\n              {\n                _postman_isSubFolder: true,\n                name: 'Request parameters',\n                description:\n                  'All filters available on the Result List, can be used on aggregations.\\n\\n',\n                item: [],\n                _postman_id: '31c031ab-3994-416d-a688-c297f911b6ff',\n              },\n              {\n                name: 'result_indicator_title',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'result_indicator_title',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'targets,actuals',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/results/aggregations/?group_by=result_indicator_title&aggregations=targets,actuals&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'results', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '2d7e5cb1-b92c-49ec-98ac-e89c425c5793',\n              },\n              {\n                name: 'result_title',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'result_title',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'actuals',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/results/aggregations/?group_by=result_title&aggregations=actuals&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'results', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'ccf451eb-fb45-433c-bab7-83c3d6df7264',\n              },\n            ],\n            _postman_id: 'f88168ec-6fec-459b-9e3b-e8e33d0c747b',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Aggregation options',\n            description:\n              'API request has to include aggregations parameter.\\n\\nThis parameter controls result aggregations and can be one or more (comma separated values) of:\\n\\n* `target` Indicator period target. Currently breaks on non number results.\\n* `actual` Indicator period actual. Currently breaks on non number results.',\n            item: [],\n            _postman_id: 'da524743-9be7-48af-9ec3-d53d65f5047f',\n          },\n        ],\n        name: 'Result Aggregations',\n      },\n      {\n        description:\n          'Returns a list of IATI Sectors stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` sectors in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'e6b294ad-fb4b-4100-b542-54f2c72cb6d2',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '16575bd4-f112-46d1-bd8e-a33a8227ce1e',\n            item: [\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'List of fields to display.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value: 'category,url,name,code',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/sectors/?fields=category,url,name,code&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'sectors', ''],\n                  },\n                },\n                _postman_id: 'dfefd8e8-1e3a-420f-a29e-8ca194c8ec31',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'sector',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/sectors/{sector_id}`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/sectors/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'sectors', ''],\n              },\n            },\n            _postman_id: '07233665-1f81-4e32-b8b8-e6e7529cb4b9',\n          },\n        ],\n        name: 'Sector List',\n      },\n      {\n        description:\n          'Returns a list of IATI Transactions stored in the IATI Datastore based on 10 results as a default. You can retrieve up to `20` transactions in a single call using the `&page_size=[nr]` option. If you want to go specific page, you can use `&page=[nr]` option. If the input value of `page_size` exceeds 20, the miximum limit number, which is 20,  will be returned.',\n        _postman_id: 'abc51749-56f4-4d05-9817-f997e0219a5b',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '9b86d7e7-13b3-4059-82d0-1e397d503d3f',\n            item: [\n              {\n                _postman_isSubFolder: true,\n                name: 'Activity Filter',\n                description:\n                  'All filters in `activity` endpoint can be used to filter transactions with regard to their activies.',\n                item: [\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: 'b96ea307-0271-4ef9-ba2f-13ea2711ce5b',\n                    request: {\n                      method: 'GET',\n                      description:\n                        'Returns `transactions` from the given Activity ID.',\n                      header: [],\n                      url: {\n                        query: [\n                          {\n                            key: 'iati_identifier',\n                            value: 'US-GOV-1-998-AID-OAA-TO-14-00035',\n                          },\n                          {\n                            key: 'format',\n                            value: 'json',\n                          },\n                          {\n                            disabled: true,\n                            key: 'fields',\n                            value: 'id',\n                          },\n                        ],\n                        raw:\n                          'https://iatidatastore.iatistandard.org/api/transactions/?iati_identifier=US-GOV-1-998-AID-OAA-TO-14-00035&format=json',\n                        protocol: 'https',\n                        host: ['iatidatastore', 'iatistandard', 'org'],\n                        path: ['api', 'transactions', ''],\n                      },\n                    },\n                    name: 'iati_identifier',\n                  },\n                ],\n                _postman_id: '6e4c0be4-f6dc-4015-9657-986735283da6',\n              },\n              {\n                name: 'aid_type (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with the given aid type ID.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'aid_type',\n                        value: 'A02',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'aid_type',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?aid_type=A02&format=json&fields=aid_type',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '25bd8aa1-ca68-463d-831b-f703dd6b2a27',\n              },\n              {\n                name: 'transaction_type (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with the given transaction type code.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'transaction_type',\n                        value: '3,1',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'transaction_type',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?transaction_type=3,1&format=json&fields=transaction_type',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '038a6a3b-d2a6-4cad-823b-b3ad96736250',\n              },\n              {\n                name: 'value (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with the given transaction value.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'value',\n                        value: '18000000',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'fields',\n                        value: 'value',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?value=18000000&format=json&fields=value',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: 'ef34d749-605b-4969-b3bb-932384179990',\n              },\n              {\n                name: 'min_value (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with a `value` that is greater than or equal to the given amount.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'min_value',\n                        value: '1800000000',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?min_value=1800000000&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '63c4c08c-1076-4bb8-ad5f-5afc3799f5c3',\n              },\n              {\n                name: 'max_value (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with a `value` that is less than or equal to the given amount.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'max_value',\n                        value: '18',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?max_value=18&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '0d368679-ae53-48ac-bd28-cb1969a11615',\n              },\n              {\n                name: 'transaction_date_year',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with a transaction date that is within the given year.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'transaction_date_year',\n                        value: '2012',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?transaction_date_year=2012&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '452efb51-28ba-4f3f-b79d-9a23205576eb',\n              },\n              {\n                name: 'transaction_date_lte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with a transaction date that is less than or equal to the given value. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'transaction_date_lte',\n                        value: '1983-01-04',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?transaction_date_lte=1983-01-04&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: 'b6ab045b-497e-4609-b4f9-6a060f4d041a',\n              },\n              {\n                name: 'provider_activity (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with the given provider activity ID.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'provider_activity',\n                        value: 'GB-COH-04105827',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?provider_activity=GB-COH-04105827&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '7edb39b3-caae-45f4-a046-58a7da0050a5',\n              },\n              {\n                name: 'transaction_date_gte (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description:\n                    'Returns `transactions` with a transaction date that is greater than or equal to the given vaue. Date must be in `YYYY-MM-DD` format.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'transaction_date_gte',\n                        value: '1983-01-04',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?transaction_date_gte=1983-01-04&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: 'cb12f181-e6db-4e93-be24-b74d469c0ab6',\n              },\n              {\n                name: 'fields (optional)',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  description: 'List of fields to display.',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'fields',\n                        value:\n                          'url,transaction_type,value,provider_organisation',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'csv',\n                        type: 'text',\n                      },\n                      {\n                        disabled: true,\n                        key: 'format',\n                        value: 'xls',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/?fields=url,transaction_type,value,provider_organisation&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', ''],\n                  },\n                },\n                _postman_id: '64619456-a4bb-490e-b187-01d9bae5cacb',\n              },\n            ],\n            name: 'Request parameters',\n          },\n          {\n            name: 'transaction',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              description:\n                'URI is constructed as follows: `/api/transactions/{transaction_id}`',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'json',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'csv',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'format',\n                    value: 'xls',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page_size',\n                    value: '1',\n                    type: 'text',\n                  },\n                  {\n                    disabled: true,\n                    key: 'page',\n                    value: '2',\n                    type: 'text',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/transactions/?format=json',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'transactions', ''],\n              },\n            },\n            _postman_id: 'b4b05be4-24cd-493f-8a61-09fb7efa3d52',\n          },\n          {\n            name: 'Transaction CSV export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'csv',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/transactions/?format=csv',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'transactions', ''],\n              },\n            },\n            _postman_id: '1be33381-9fac-4953-a035-aa4cdfb0b37c',\n          },\n          {\n            name: 'Transaction XML export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'xml',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/transactions/?format=xml',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'transactions', ''],\n              },\n            },\n            _postman_id: '75e86f17-427e-467b-8183-ccde5963d7a2',\n          },\n          {\n            name: 'Transaction XLS export',\n            protocolProfileBehavior: {\n              disableBodyPruning: true,\n            },\n            request: {\n              method: 'GET',\n              header: [],\n              url: {\n                query: [\n                  {\n                    key: 'format',\n                    value: 'xls',\n                  },\n                ],\n                raw:\n                  'https://iatidatastore.iatistandard.org/api/transactions/?format=xls',\n                protocol: 'https',\n                host: ['iatidatastore', 'iatistandard', 'org'],\n                path: ['api', 'transactions', ''],\n              },\n            },\n            _postman_id: '7041412e-8259-4644-a953-7e792d599d7a',\n          },\n        ],\n        name: 'Transaction List',\n      },\n      {\n        _postman_id: '02de4cd6-c136-42ce-8cea-a5674d00184d',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            name: 'Request parameters',\n            description:\n              'All filters available on the Transaction List, can be used on aggregations.',\n            item: [],\n            _postman_id: 'a1236f07-a11a-4409-bcf5-b25063fe07f0',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Group by option ',\n            description:\n              'Returns aggregations based on the item grouped by, and the selected\\n    aggregation.\\n\\nAPI request has to include `group_by` parameter.\\n\\nThis parameter controls result aggregations and\\ncan be one or more (comma separated values) of:\\n* `recipient_country`\\n* `recipient_region`\\n* `sector`\\n* `related_activity`\\n* `transaction_type`\\n* `reporting_organisation`\\n* `participating_organisation`\\n* `receiver_org`\\n* `provider_org`\\n* `document_link_category`\\n* `activity_status`\\n* `participating_organisation_type`\\n* `collaboration_type`\\n* `default_flow_type`\\n* `default_finance_type`\\n* `default_aid_type`\\n* `default_tied_status`\\n* `transaction_date_month`\\n* `transaction_date_quarter`\\n* `transaction_date_year`\\n',\n            item: [\n              {\n                name: 'recipient_country',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'recipient_country',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,activity_count',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=recipient_country&aggregations=count,activity_count&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'a6aee5d4-0a68-42f3-95f3-be27531cd12f',\n              },\n              {\n                name: 'recipient_region',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'recipient_region',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=recipient_region&aggregations=count&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '91abb21d-9637-4f15-bab7-0a572e53c04a',\n              },\n              {\n                name: 'sector',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'sector',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=sector&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '5be02bc6-607c-49d6-996e-c2c50af8cf46',\n              },\n              {\n                name: 'related_activity',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'related_activity',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=related_activity&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'a51268ca-bb72-464a-a2aa-24ca7f0daacf',\n              },\n              {\n                name: 'transaction_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'transaction_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=transaction_type&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'ae903b5e-84cf-471b-bbad-0c878272d3fb',\n              },\n              {\n                name: 'reporting_organisation',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'reporting_organisation',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=reporting_organisation&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'b5d881a7-b47c-4f00-bc0a-56cc8477bec6',\n              },\n              {\n                name: 'participating_organisation',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'participating_organisation',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=participating_organisation&aggregations=count&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '520c29bd-bfe2-434d-a769-c3b2f683b980',\n              },\n              {\n                name: 'receiver_org',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'receiver_org',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        disabled: true,\n                        key: 'receiver_organisation_name',\n                        value: 'Datacom Co. Ltd',\n                        type: 'text',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=receiver_org&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '7e2b801a-2ac1-48e6-8079-e94ad9633956',\n              },\n              {\n                name: 'provider_org',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'provider_org',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                      {\n                        key: 'provider_organisation_name',\n                        value: 'Anambra State Government',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=provider_org&aggregations=count,value&format=json&provider_organisation_name=Anambra State Government',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '104939b4-810f-43ab-b90d-f95bded6e778',\n              },\n              {\n                name: 'document_link_category',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'document_link_category',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=document_link_category&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '896da4de-759b-402f-8030-0eb0efb4dafe',\n              },\n              {\n                name: 'activity_status',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'activity_status',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=activity_status&aggregations=count,value&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'd6d0b416-a521-48e9-adbd-9d38e58d92bb',\n              },\n              {\n                name: 'participating_organisation_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'participating_organisation_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=participating_organisation_type&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'b84598e8-4b0b-4347-8cae-3c85f73b4139',\n              },\n              {\n                name: 'collaboration_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'collaboration_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=collaboration_type&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '92ffd207-4b95-404d-a422-82eab4360580',\n              },\n              {\n                name: 'default_flow_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'default_flow_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=default_flow_type&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'a70f3646-303e-4575-b5e3-257c9477340f',\n              },\n              {\n                name: 'default_finance_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'default_finance_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=default_finance_type&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '93892374-5e8b-4535-b88d-2fd5cdddab7e',\n              },\n              {\n                name: 'default_aid_type',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'default_aid_type',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=default_aid_type&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'a797b08d-1aa2-44e9-9b0e-948eb1ef288b',\n              },\n              {\n                name: 'default_tied_status',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'default_tied_status',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=default_tied_status&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: 'b065a241-9dcd-4dde-a185-0d0ea1575ab5',\n              },\n              {\n                name: 'transaction_date_month',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'transaction_date_month',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=transaction_date_month&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '967d96d2-1735-45a9-8c3e-e03c54abe71c',\n              },\n              {\n                name: 'transaction_date_quarter',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'transaction_date_quarter',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=transaction_date_quarter&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '984d0429-0a29-422b-9d44-239e13e7e734',\n              },\n              {\n                name: 'transaction_date_year',\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'group_by',\n                        value: 'transaction_date_year',\n                      },\n                      {\n                        key: 'aggregations',\n                        value: 'count,value,expenditure',\n                      },\n                      {\n                        key: 'format',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'https://iatidatastore.iatistandard.org/api/transactions/aggregations/?group_by=transaction_date_year&aggregations=count,value,expenditure&format=json',\n                    protocol: 'https',\n                    host: ['iatidatastore', 'iatistandard', 'org'],\n                    path: ['api', 'transactions', 'aggregations', ''],\n                  },\n                },\n                _postman_id: '54ce9bc0-5f75-46c5-99f7-ae41f033cf85',\n              },\n            ],\n            _postman_id: 'e374fb7d-8fe6-4951-83fa-b8900c055317',\n          },\n          {\n            _postman_isSubFolder: true,\n            name: 'Aggregations options',\n            description:\n              'API request has to include `aggregations` parameter.\\n\\nThis parameter controls result aggregations and\\ncan be one or more (comma separated values) of:\\n\\n* `count`\\n* `activity_count`\\n* `value`\\n* `disbursement`\\n* `expenditure`\\n* `commitment`\\n* `incoming_fund`\\n* `incoming_commitment`\\n* `disbursement_expenditure` Disbursement and expenditure summed together.\\n',\n            item: [],\n            _postman_id: '07294285-c0e8-4a1b-a0db-958c20e19db6',\n          },\n          {\n            description:\n              \"By default the values returned by the aggregations are in the reported\\n    currency. This only renders meaningful results when all values were in the\\n    same currency. Which is only the case when you filter your results down.\\n\\nThe aggregation endpoints have the ability to return values in a currency.\\n    Options for this `convert_to` parameter are:\\n\\n* `xdr`\\n* `usd`\\n* `eur`\\n* `gbp`\\n* `jpy`\\n* `cad`\\n\\nThis results in converted values when the original value was in another\\ncurrency.\\n\\nInformation on used exchange rates can be found <a href='https://docs.oipa.nl/'>in the docs</a>.\",\n            _postman_id: '088c5f92-c469-4a85-a586-657cd269d44e',\n            _postman_isSubFolder: true,\n            item: [],\n            name: 'Currency options',\n          },\n        ],\n        name: 'Transaction Aggregations',\n      },\n      {\n        _postman_id: 'c0adc10c-84a2-48d5-bbc1-11cc01e12141',\n        item: [\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '16d30fbc-14f8-4d01-a01d-2cfe6696bc61',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'af351f30-95b4-441f-ac1e-4e738d8d5ab4',\n                request: {\n                  method: 'GET',\n                  description:\n                    'recipient_country_code:AF AND recipient_country_narrative:Afghanistan\\n- 3345\\n\\nrecipient_country_code:AF\\n- 18087\\n\\nrecipient_country_narrative:Afghanistan\\n- 3347\\n\\n-recipient_country_code:AF AND recipient_country_narrative:Afghanistan\\n- 2\\n\\nrecipient_country_code:AF AND -recipient_country_narrative:Afghanistan\\n- 14742\\n\\nrecipient_country_code:AF AND -recipient_country_narrative:*\\n- 14648\\n\\nrecipient_country_code:AF AND recipient_country_narrative:*\\n- 3439\\n',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'recipient_country_code:AF',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=recipient_country_code:AF',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'Query By Country',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'afdb6278-e87d-4540-91af-fe651f495dab',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '*:*',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=*:*',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'Query Activity',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '24d41780-920d-4ff7-bd55-babcefef4397',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '*:*',\n                      },\n                      {\n                        key: 'facet',\n                        value: 'on',\n                      },\n                      {\n                        key: 'facet.field',\n                        value: 'recipient_country_code',\n                      },\n                      {\n                        disabled: true,\n                        key: 'fl',\n                        value: 'facet_counts',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=*:*&facet=on&facet.field=recipient_country_code',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'Query Facet By Country',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '2a4c8124-ab6d-4492-8d82-87a6955d0dc3',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '*:*',\n                      },\n                      {\n                        key: 'group',\n                        value: 'true',\n                      },\n                      {\n                        key: 'fl',\n                        value: 'reporting_org_ref,iati_version',\n                      },\n                      {\n                        key: 'group.field',\n                        value: 'reporting_org_ref',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity//?q=*:*&group=true&fl=reporting_org_ref,iati_version&group.field=reporting_org_ref',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select', ''],\n                  },\n                },\n                name: 'Query Group By Reporting Organisation',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'd1df8812-7455-4fd9-a0f0-048fbb25c838',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '*:*',\n                      },\n                      {\n                        key: 'facet.pivot',\n                        value: 'reporting_org_ref,iati_version',\n                      },\n                      {\n                        key: 'facet',\n                        value: 'on',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity//?q=*:*&facet.pivot=reporting_org_ref,iati_version&facet=on',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select', ''],\n                  },\n                },\n                name: 'Query Group By Multiple Fields',\n              },\n            ],\n            name: 'Activity ',\n          },\n          {\n            _postman_isSubFolder: true,\n            _postman_id: '94f40fc3-7d1e-4498-a672-458293f95bd0',\n            item: [\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'f157dea0-56b9-416f-9d07-cc541220c7ef',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: '*:*',\n                      },\n                      {\n                        key: 'facet',\n                        value: 'on',\n                      },\n                      {\n                        key: 'facet.field',\n                        value: 'recipient_country_code',\n                      },\n                      {\n                        key: 'fl',\n                        value: 'facet_counts',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=*:*&facet=on&facet.field=recipient_country_code&fl=facet_counts',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name:\n                  'Count activity for each country, currently avaiable in DataStore',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '87f93bce-f827-4f32-ba99-0eccc81b2bc5',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'recipient_country_code:KE',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=recipient_country_code:KE',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All activity for Kenya country',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '9adfccf1-9e3c-42cc-90d4-fbbdabd38491',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'reporting_org_ref:XM-DAC-47066',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=reporting_org_ref:XM-DAC-47066',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All activity of the IOM',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '5d8fc0b3-0d29-4a67-a1a8-085e2319900a',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'iati_version:2.03',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=iati_version:2.03',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All Activity with IATI Version 2.03',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'fef8b6a9-1514-4c7d-8e1c-a38735b679ab',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'iati_version:2.02',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=iati_version:2.02',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All Activity with IATI Version 2.02',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'ef6053c2-d047-4f91-8d78-f70ecb2440e1',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'iati_version:2.01',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=iati_version:2.01',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All Activity with IATI Version 2.01',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '2129f009-5d67-44fb-992e-cdaa60acb6f5',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'transaction_humanitarian:1',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=transaction_humanitarian:1',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All Activity with Transaction Humanitarian is True',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'b5ad3dab-3e43-48ca-ad05-eaaaeab49197',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'contact_info_email:mosul@almortaqa.org',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=contact_info_email:mosul@almortaqa.org',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All Activity with Contact Email mosul@almortaqa.org',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: 'ad730a25-370d-4afb-9251-6720c5de0543',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'budget_value:{1000000 TO *}',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=budget_value:{1000000 TO *}',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', 'activity', 'select'],\n                  },\n                },\n                name: 'All Activity have budget 1 million or more',\n              },\n              {\n                protocolProfileBehavior: {\n                  disableBodyPruning: true,\n                },\n                _postman_id: '002561fa-d0c4-4c08-9130-1e06097266a7',\n                request: {\n                  method: 'GET',\n                  header: [],\n                  url: {\n                    query: [\n                      {\n                        key: 'q',\n                        value: 'iati_identifier:GB-COH-04105827-AIDDIRECT',\n                      },\n                      {\n                        key: 'wt',\n                        value: 'json',\n                      },\n                    ],\n                    raw:\n                      'http://direct-indexing.iati.cloud/api/v2/activity/?q=iati_identifier:GB-COH-04105827-AIDDIRECT&wt=json',\n                    protocol: 'https',\n                    host: ['api', 'datastore', 'iati', 'cloud'],\n                    path: ['search', '', 'activity', 'select'],\n                  },\n                },\n                name:\n                  'Get a big activity with more then 1000 transactions records  in JSON format, just in the couple seconds.',\n              },\n            ],\n            name: 'Use Case ',\n          },\n          {\n            _postman_isSubFolder: true,\n            _postman_id: 'd53bc5e0-0253-4a9d-99b1-dac57815b933',\n            item: [\n              {\n                _postman_isSubFolder: true,\n                name: 'Query DSL',\n                description:\n                  'https://lucene.apache.org/solr/guide/8_1/json-query-dsl.html',\n                item: [\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: '904321b0-389a-4364-8e4d-e301e4eb357f',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        mode: 'raw',\n                        raw:\n                          '{\\n\\t\"query\": \"transaction_recipient_country_code:PK\"\\n}',\n                      },\n                      header: [\n                        {\n                          key: 'Content-Type',\n                          value: 'application/json',\n                          type: 'text',\n                        },\n                      ],\n                      url: {\n                        query: [\n                          {\n                            disabled: true,\n                            key: '',\n                            value: '',\n                            type: 'text',\n                          },\n                        ],\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Query By Country ',\n                  },\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: '0fed4f89-b351-4d86-ab55-e672d3333c53',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        mode: 'raw',\n                        raw:\n                          '{\\n\\t\"query\": \"{!lucene df=transaction_recipient_country_code v=NL}\"\\n}',\n                      },\n                      description:\n                        'Document Link:\\n- https://lucene.apache.org/solr/guide/8_1/json-query-dsl.html\\n\\nAvaiable paramter can see from this link:\\n- http://localhost:8983/solr/#/transaction/query\\n-',\n                      header: [\n                        {\n                          key: 'Content-Type',\n                          value: 'application/json',\n                          type: 'text',\n                        },\n                      ],\n                      url: {\n                        query: [\n                          {\n                            disabled: true,\n                            key: '',\n                            value: '',\n                            type: 'text',\n                          },\n                        ],\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Query By Country  with Local Variable',\n                  },\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: '3cd3a208-a1dc-48cd-9350-44a0b968ff22',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        mode: 'raw',\n                        raw:\n                          '{\\n\\t\"query\": \"transaction_value_date:[2016-01-01T00:00:00Z TO 2017-12-31T00:00:00Z]\"\\n}',\n                      },\n                      description:\n                        'Document Link:\\n- https://lucene.apache.org/solr/guide/8_1/json-query-dsl.html\\n- https://lucene.apache.org/solr/guide/8_1/working-with-dates.html\\n\\nAvaiable paramter can see from this link:\\n- http://localhost:8983/solr/#/transaction/query',\n                      header: [\n                        {\n                          key: 'Content-Type',\n                          value: 'application/json',\n                          type: 'text',\n                        },\n                      ],\n                      url: {\n                        query: [\n                          {\n                            disabled: true,\n                            key: '',\n                            value: '',\n                            type: 'text',\n                          },\n                        ],\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Query By Start Date To End Date ',\n                  },\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: '90a8a5fe-9511-4fba-93e6-f0135fd75305',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        mode: 'raw',\n                        raw:\n                          '{\\n\\t\"query\": {\\n\\t\\t\"lucene\": {\\n\\t\\t\\t\"df\": \"transaction_recipient_country_code\",\\n\\t\\t\\t\"query\": \"PK AF\"\\n\\t\\t}\\n\\t}\\n}',\n                      },\n                      header: [\n                        {\n                          key: 'Content-Type',\n                          value: 'application/json',\n                          type: 'text',\n                        },\n                      ],\n                      url: {\n                        query: [\n                          {\n                            disabled: true,\n                            key: '',\n                            value: '',\n                            type: 'text',\n                          },\n                        ],\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Query By Multiple Countries ',\n                  },\n                ],\n                _postman_id: 'c36e02cd-f980-469b-8404-0c576f673b24',\n              },\n              {\n                _postman_isSubFolder: true,\n                name: 'JSON Facet API',\n                description:\n                  'https://lucene.apache.org/solr/guide/8_0/json-facet-api.html',\n                item: [\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: 'e78b181b-1bc0-4c65-8e5a-aa1a260e62c1',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        formdata: [\n                          {\n                            key: 'q',\n                            value: 'transaction_recipient_country_code:PK',\n                            type: 'text',\n                          },\n                          {\n                            key: 'json.facet',\n                            value: '{blabla: \"sum(transaction_value)\"}',\n                            type: 'text',\n                          },\n                          {\n                            disabled: true,\n                            key: 'fl',\n                            value: 'facets',\n                            type: 'text',\n                          },\n                        ],\n                        mode: 'formdata',\n                      },\n                      header: [],\n                      url: {\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Aggregation By Country',\n                  },\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: '56a5ccf9-67f5-42e9-8423-b89130b0c51c',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        formdata: [\n                          {\n                            key: 'q',\n                            value:\n                              'transaction_recipient_country_code:PK AND transaction_value_currency:EUR',\n                            type: 'text',\n                          },\n                          {\n                            key: 'json.facet',\n                            value:\n                              '{total_value_eur: \"sum(transaction_value)\"}',\n                            type: 'text',\n                          },\n                          {\n                            disabled: true,\n                            key: 'fl',\n                            value: 'facets',\n                            type: 'text',\n                          },\n                        ],\n                        mode: 'formdata',\n                      },\n                      header: [],\n                      url: {\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Aggregation By Country & Currency',\n                  },\n                  {\n                    protocolProfileBehavior: {\n                      disableBodyPruning: true,\n                    },\n                    _postman_id: 'e48bc2cf-13cd-440c-a844-3d3ff98dba6b',\n                    request: {\n                      method: 'POST',\n                      body: {\n                        formdata: [\n                          {\n                            key: 'q',\n                            value:\n                              'transaction_recipient_country_code:PK AND transaction_value_date:[2016-01-01T00:00:00Z TO 2017-12-31T00:00:00Z]',\n                            type: 'text',\n                          },\n                          {\n                            key: 'json.facet',\n                            value: '{total_value: \"sum(transaction_value)\"}',\n                            type: 'text',\n                          },\n                        ],\n                        mode: 'formdata',\n                      },\n                      header: [],\n                      url: {\n                        raw:\n                          'http://direct-indexing.iati.cloud/api/v2/transaction/query',\n                        protocol: 'https',\n                        host: ['api', 'datastore', 'iati', 'cloud'],\n                        path: ['search', 'transaction', 'query'],\n                      },\n                    },\n                    name: 'Aggregation By Country From Start Date To End Date',\n                  },\n                ],\n                _postman_id: 'db82f103-ec89-49e0-8d57-f7cdcf28297a',\n              },\n            ],\n            name: 'Transaction',\n          },\n        ],\n        name: 'DataStore Search Engine',\n      },\n    ],\n    info: {\n      schema:\n        'https://schema.getpostman.com/json/collection/v2.1.0/collection.json',\n      name: 'API Documentation',\n      description:\n        'This API provides programmatic access to query IATI data. The API responses are available in JSON, XML and CSV format. The API is developed using the Django rest framework and also makes use of Solr, an open source enterprise search platform, written in Java.\\n\\n# Available endpoints\\n\\n* Activities: `api/activities/`\\n* Budget aggregation: `/api/budgets/aggregations`\\n* Codelists: `/api/codelists`\\n* Countries: `/api/countries`\\n* Current branch: `/api/branch`\\n* Datasets: `/api/datasets`\\n* Locations: `/api/locations`\\n* Organisations: `/api/organisations`\\n* Publishers: `/api/publishers`\\n* Regions: `/api/regions`\\n* Results aggregations: `/api/results/aggregations`\\n* Sectors: `/api/sectors`\\n* Transactions: `/api/transactions`\\n\\n\\n# XML export\\nIf you require XML format from the API, simply use the format  &format=XML in your call. \\n\\n# CSV export\\nIf you require CSV format from the API, simply use the format  &format=CSV in your call. \\n\\nNot all the API calls have multi format support.\\n',\n      _postman_id: 'c07eebd3-61b2-47b4-9bfd-1bac7ec96c9f',\n    },\n  },\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CustomLink = styled((props) => <NavLink {...props} />)`\n  width: 100%;\n  margin-bottom: 42px;\n  min-height: 24px;\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 500;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n\n  color: rgba(1, 1, 10, 0.6);\n\n  &:hover {\n    color: #25a898;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DocsideBarContainer = styled.div`\n  &&& {\n    padding-left: 20px;\n    padding-bottom: 0;\n    background-color: #f0f3f7;\n    position: sticky;\n    top: 187px;\n    height: calc(100vh - 187px);\n    // overflow-y: scroll;\n  }\n`;\n","import styled from 'styled-components';\nexport const DocsideBarNavList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n","import styled from 'styled-components';\n\nexport const ApiDocSearchBoxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  height: 48px;\n  border-radius: 2px;\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 85%;\n  position: sticky;\n`;\n","import InputBase from '@material-ui/core/InputBase';\nimport styled from 'styled-components';\n\nexport const ApiDocSearchInput = styled(InputBase)`\n  font-family: Inter-BETA, sans-serif;\n  font-size: 16px;\n  font-weight: 300;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n  color: black;\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { HashLink } from 'react-router-hash-link';\n\nexport const CustomLink2 = styled((props) => <HashLink {...props} />)`\n  width: 100%;\n  margin-bottom: 42px;\n  min-height: 24px;\n  font-family: Inter, sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n  color: rgb(18, 18, 18);\n\n  &:hover {\n    color: #25a898;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { CustomLink2 } from 'app/modules/documentation-module/common/DocSideBar/common/ui/CustomLink2';\n\ntype Props = {\n  active: boolean;\n  requestMethod: string;\n  text: string;\n  to: string;\n};\n\nexport const SubLink3 = (props: Props) => {\n  return (\n    <div\n      css={`\n        display: flex;\n        min-height: 42px;\n        flex-direction: row;\n        align-items: center;\n      `}\n    >\n      <Link to={props.to} active={props.active}>\n        {`${props.requestMethod} ${props.text}`}\n      </Link>\n    </div>\n  );\n};\n\nconst Link = styled((props) => <CustomLink2 {...props} />)`\n  display: flex;\n  font-size: 14px;\n  min-height: 42px;\n  flex-direction: row;\n  align-items: center;\n  color: rgb(85, 85, 85);\n  padding: 5px 0 5px 18px;\n  margin-bottom: 0 !important;\n  font-weight: ${(props) => (props.active ? 'bold' : 'normal')};\n  border-left: 4px solid ${(props) => (props.active ? '#5B6673' : '#E2E6EB')};\n`;\n\nconst Trail = styled((props) => <div {...props} />)`\n  width: 4px;\n  min-height: 42px;\n  margin-right: 18px;\n  background-color: ${(props) => (props.active ? '#5B6673' : '#E2E6EB')};\n`;\n","// @ts-nocheck\n//cc:api documentation module#; navigation - side bar\nimport React from 'react';\nimport { TreeItem } from '@material-ui/lab';\nimport { HashLink } from 'react-router-hash-link';\nimport styled from 'styled-components';\nimport { SubLink3 } from 'app/modules/documentation-module/common/DocSideBar/common/ui/SubLink3';\n\ntype Props = {\n  item: any;\n  postmanId: string;\n  activeHash: string;\n};\n\nconst Link = styled((props) => <HashLink {...props} />)`\n  && {\n    text-decoration: none;\n    color: rgba(1, 1, 10, 0.6);\n  }\n`;\n\nconst Item = styled((props) => <TreeItem {...props} />)`\n  && {\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiTypography-body1'] {\n      font-family: Inter, sans-serif;\n      font-size: 16px;\n      font-weight: 500 !important;\n      font-style: normal;\n      font-stretch: normal;\n      line-height: 1.5;\n      letter-spacing: 0.15px;\n      color: rgba(1, 1, 10, 0.6);\n    }\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiTreeItem-content'] {\n      margin-bottom: 42px;\n    }\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiTreeItem-root'] {\n      margin-bottom: 42px;\n    }\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiCollapse-wrapperInner'] {\n      margin-bottom: 42px;\n    }\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiSvgIcon-root'] {\n      fill: rgba(1, 1, 10, 0.6);\n    }\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiTreeItem-label']:hover {\n      color: #25a898;\n      background-color: #f0f3f7 !important;\n    }\n    // todo: we should step away from modifying elements via class names\n    [class*='MuiTreeItem-label'] {\n      background-color: unset !important;\n    }\n  }\n`;\n\nexport function TreeItemLink(props: Props) {\n  // console.log('TreeItemLink', props.postmanId, props.item.name);\n\n  return (\n    <React.Fragment>\n      {(props.item.item && props.item.item.length > 0) ||\n      props.item._postman_isSubFolder ? (\n        <Item nodeId={props.item.name} label={props.item.name}>\n          <Link to={`${props.postmanId}#${props.item.name}`} />\n          {props.children}\n        </Item>\n      ) : (\n        <SubLink3\n          requestMethod={props.item.request ? props.item.request.method : ''}\n          text={props.item.name}\n          to={`/documentation/${props.postmanId}#${props.item.name}`}\n          active={\n            props.item.name ===\n            decodeURIComponent(props.activeHash.replace('#', ''))\n          }\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","import styled from 'styled-components/macro';\n\nexport const LicenseFooter = styled.div`\n  height: 32px;\n  left: 5%;\n  right: 10.63%;\n  bottom: 10px;\n  padding-top: 10px;\n  overflow: hidden;\n  position: absolute;\n  background-color: #f0f3f7;\n\n  font-family: Inter;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 16px;\n\n  letter-spacing: 0.4202px;\n\n  color: rgba(1, 1, 10, 0.6);\n`;\n","// @ts-nocheck\n//cc:api documentation module#; navigation - side bar\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useHistory } from 'react-router';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { useStoreState } from 'app/modules/documentation-module/state/store';\nimport { Root } from 'app/modules/documentation-module/state/RootModel';\nimport { getResults } from 'app/modules/documentation-module/common/DocSideBar/utils';\nimport { CustomLink } from 'app/modules/documentation-module/common/DocSideBar/common/ui/CustomLink';\nimport { DocsideBarContainer } from 'app/modules/documentation-module/common/DocSideBar/common/ui/DocsideBarContainer';\nimport { DocsideBarNavList } from 'app/modules/documentation-module/common/DocSideBar/common/ui/DocsideBarNavList';\nimport { ApiDocSearchBoxContainer } from 'app/modules/documentation-module/common/DocSideBar/common/ui/ApiDocSearchBoxContainer';\nimport { ApiDocSearchInput } from 'app/modules/documentation-module/common/DocSideBar/common/ui/ApiDocSearchInput';\nimport { TreeView } from '@material-ui/lab';\nimport { Folder, FolderOpen } from '@material-ui/icons';\nimport { TreeItemLink } from './common/TreeItem';\nimport { LicenseFooter } from './common/ui/LicenseFooter';\n\nexport function DocsideBar() {\n  const history = useHistory();\n  const data: Root = useStoreState((state) => state.data && state.data);\n  const categories = data && data.collection;\n  const [searchVal, setSearchVal] = React.useState('');\n  const [activeHash, setActiveHash] = React.useState('');\n\n  history.listen((l) => {\n    setActiveHash(l.hash);\n  });\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (window.location.hash) {\n        const id = decodeURIComponent(window.location.hash.replace('#', ''));\n        const element = document.getElementById(id);\n        element && element.scrollIntoView();\n      }\n    }, 0);\n  }, [data]);\n\n  return (\n    <DocsideBarContainer>\n      <Box height=\"52px\" />\n      <ApiDocSearchBoxContainer>\n        <ApiDocSearchInput\n          placeholder=\"Search\"\n          inputProps={{ 'aria-label': 'search' }}\n          onChange={(e) => setSearchVal(e.target.value)}\n        />\n        <SearchIcon\n          css={`\n            color: #a1aebd;\n          `}\n        />\n      </ApiDocSearchBoxContainer>\n      <Box height=\"62px\" />\n      {/* 379px is every pixel above this component*/}\n      <div style={{ overflowY: 'auto', height: 'calc(100vh - 379px)' }}>\n        <DocsideBarNavList>\n          <CustomLink key=\"Introduction\" to=\"/documentation/\">\n            Introduction\n          </CustomLink>\n\n          <TreeView\n            defaultCollapseIcon={<FolderOpen />}\n            defaultExpandIcon={<Folder />}\n          >\n            {categories &&\n              getResults(categories.item, searchVal).map((item) => (\n                <TreeItemLink\n                  item={item}\n                  postmanId={item.id}\n                  key={item.id}\n                  activeHash={activeHash}\n                >\n                  {item.item &&\n                    item.item.map((subItem1) => (\n                      <TreeItemLink\n                        item={subItem1}\n                        postmanId={item.id}\n                        key={subItem1.id}\n                        activeHash={activeHash}\n                      >\n                        {subItem1.item &&\n                          subItem1.item.map((subItem2) => (\n                            <TreeItemLink\n                              item={subItem2}\n                              postmanId={item.id}\n                              key={subItem2.id}\n                              activeHash={activeHash}\n                            >\n                              {subItem2.item &&\n                                subItem2.item.map((subItem3) => (\n                                  <TreeItemLink\n                                    item={subItem3}\n                                    postmanId={item.id}\n                                    key={subItem3.id}\n                                    activeHash={activeHash}\n                                  />\n                                ))}\n                            </TreeItemLink>\n                          ))}\n                      </TreeItemLink>\n                    ))}\n                </TreeItemLink>\n              ))}\n          </TreeView>\n          <LicenseFooter>\n            Code licensed under the GNU AGPL. Documentation licensed under CC BY\n            3.0.\n          </LicenseFooter>\n        </DocsideBarNavList>\n      </div>\n    </DocsideBarContainer>\n  );\n}\n","export function getResults(data, searchVal) {\n  const results: any = [];\n  const searchValue = searchVal.toLowerCase();\n  if (searchVal !== '') {\n    data.forEach((category) => {\n      const item = category.name.toLowerCase();\n      let categoryPass = item.indexOf(searchValue) > -1;\n      let item1Pass = false;\n      let item2Pass = false;\n      let item3Pass = false;\n      let catIndex = 0;\n      let item1Index = 0;\n      let item2Index = 0;\n      if (categoryPass) {\n        results.push(category);\n        catIndex = results.length - 1;\n      }\n      if (!categoryPass) {\n        category.item.forEach((item1) => {\n          item1Pass = item1.name.toLowerCase().indexOf(searchValue) > -1;\n          if (!categoryPass && item1Pass) {\n            results.push({ ...category, item: [] });\n            catIndex = results.length - 1;\n            categoryPass = true;\n          }\n          if (item1Pass) {\n            results[catIndex].item.push(item1);\n            item1Index = results[catIndex].item.length - 1;\n          } else if (item1.item) {\n            item1.item.forEach((item2) => {\n              item2Pass = item2.name.toLowerCase().indexOf(searchValue) > -1;\n              if ((!categoryPass || !item1Pass) && item2Pass) {\n                if (!categoryPass) {\n                  results.push({ ...category, item: [] });\n                  catIndex = results.length - 1;\n                  categoryPass = true;\n                }\n                if (!item1Pass) {\n                  results[catIndex].item.push({ ...item1, item: [] });\n                  item1Index = results[catIndex].item.length - 1;\n                  item1Pass = true;\n                }\n              }\n              if (item2Pass) {\n                results[catIndex].item[item1Index].item.push(item2);\n                item2Index =\n                  results[results.length - 1].item[item1Index].item.length - 1;\n              } else if (item2.item) {\n                item2.item.forEach((item3) => {\n                  item3Pass =\n                    item3.name.toLowerCase().indexOf(searchValue) > -1;\n                  if (\n                    (!categoryPass || !item1Pass || !item2Pass) &&\n                    item3Pass\n                  ) {\n                    if (!categoryPass) {\n                      results.push({ ...category, item: [] });\n                      catIndex = results.length - 1;\n                      categoryPass = true;\n                    }\n                    if (!item1Pass) {\n                      results[catIndex].item.push({ ...item1, item: [] });\n                      item1Index = results[catIndex].item.length - 1;\n                      item1Pass = true;\n                    }\n                    if (!item2Pass) {\n                      results[catIndex].item[item1Index].item.push({\n                        ...item2,\n                        item: [],\n                      });\n                      item2Index =\n                        results[results.length - 1].item[item1Index].item\n                          .length - 1;\n                      item2Pass = true;\n                    }\n                  }\n                  if (item3Pass) {\n                    results[catIndex].item[item1Index].item[\n                      item2Index\n                    ].item.push({\n                      ...item3,\n                      item: [],\n                    });\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n    return results;\n  }\n  return data;\n}\n","import React from 'react';\nimport { Box, Grid, Typography } from '@material-ui/core';\nimport Markdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport highlight from 'remark-highlight.js';\n\nexport const CategoryHeader = ({ category }) => {\n  return (\n    <>\n      <Grid container spacing={2} id={category.name}>\n        <Grid item md={12}>\n          <Typography variant=\"h3\">{category.name}</Typography>\n        </Grid>\n        <Grid item md={12}>\n          <Typography variant=\"body2\">\n            <Markdown className=\"markdown\" remarkPlugins={[gfm, highlight]}>\n              {category.description ?? category.description}\n            </Markdown>\n          </Typography>\n        </Grid>\n      </Grid>\n      <Box height=\"40px\" />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport get from 'lodash/get';\n\nexport const ApiItemDivider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #f0f3f7;\n`;\n\nexport function getEndpointPath(endpoint: any): string {\n  let path: string[] = [];\n  let endpointPath: string = '';\n\n  if (endpoint.item[0] && endpoint.item[0].hasOwnProperty('item')) {\n    if (\n      endpoint.item[0].item[0] &&\n      endpoint.item[0].item[0].hasOwnProperty('item')\n    ) {\n      if (\n        endpoint.item[0].item[0].item[0] &&\n        endpoint.item[0].item[0].item[0].hasOwnProperty('item')\n      ) {\n      } else {\n        if (endpoint.item[0].item[0].item.length > 0) {\n          path = get(endpoint, 'item[0].item[0].item[0].request.url.path', []);\n        } else {\n          path = get(endpoint, 'item[0].item[1].request.url.path', []);\n        }\n      }\n    } else {\n      if (endpoint.item[0].item.length > 0) {\n        path = get(endpoint, 'item[0].item[0].request.url.path', []);\n      } else {\n        path = get(endpoint, 'item[1].item[0].request.url.path', []);\n      }\n    }\n  } else {\n    path = get(endpoint, 'item[0].request.url.path', []);\n  }\n\n  path.forEach((pathItem) => {\n    if (pathItem != '') {\n      endpointPath += pathItem += '/';\n    }\n  });\n\n  return endpointPath;\n}\n","import React from 'react';\nimport { Box, Grid, Typography } from '@material-ui/core';\nimport { ApiItemDivider } from 'app/modules/documentation-module/common/DocDetail/common/utils/ui';\nexport const SubCategoryHeader = ({ item }) => {\n  return (\n    <React.Fragment>\n      <ApiItemDivider />\n      <Grid item md={12}>\n        <Box height={'40px'} width={'100px'} />\n        <Typography variant=\"h5\">{item.name}</Typography>\n        <Box height={'40px'} width={'100px'} />\n      </Grid>\n      <ApiItemDivider />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport Markdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport highlight from 'remark-highlight.js';\n\nexport const SubCaregoryDescription = ({ item }) => {\n  return (\n    <Grid item md={12}>\n      <Typography variant=\"body2\">\n        <Markdown className=\"markdown\" remarkPlugins={[gfm, highlight]}>\n          {item.description ?? item.description}\n        </Markdown>\n      </Typography>\n      <Box height=\"20px\" width=\"20px\" />\n    </Grid>\n  );\n};\n","import styled from 'styled-components';\nexport const ParameterHeader = styled.div`\n  border-top: 1px solid #f0f3f7;\n  border-bottom: 1px solid #f0f3f7;\n  margin-bottom: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n","import styled from 'styled-components';\nexport const ParameterList = styled.div`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n","import styled from 'styled-components';\nexport const ParameterListItem = styled.li`\n  display: flex;\n  width: 100%;\n  margin-bottom: 10px;\n  div {\n    font-size: 14px;\n    &:first-child {\n      font-weight: bold;\n      width: 50%;\n    }\n  }\n`;\n","import React from 'react';\nimport { ParameterHeader } from 'app/modules/documentation-module/common/DocDetail/common/ApiParameterList/common/ui/ParameterHeader';\nimport { ParameterList } from 'app/modules/documentation-module/common/DocDetail/common/ApiParameterList/common/ui/ParameterList';\nimport { ParameterListItem } from 'app/modules/documentation-module/common/DocDetail/common/ApiParameterList/common/ui/ParameterListItem';\n\nexport const ApiCallParamItem = ({ data }) => {\n  return (\n    <ParameterListItem>\n      <div>{data.key}</div>\n      <div>{data.value}</div>\n    </ParameterListItem>\n  );\n};\n\nexport const ApiCallParamList = ({ data }) => {\n  return (\n    <React.Fragment>\n      {/* -------------------- */}\n      {/* param header */}\n      <ParameterHeader>PARAMS</ParameterHeader>\n      {/* --------- */}\n\n      {/* -------------------- */}\n      {/* param list */}\n      <ParameterList>\n        {data &&\n          data.map((item, index) => (\n            <ApiCallParamItem key={index} data={item} />\n          ))}\n      </ParameterList>\n      {/* --------- */}\n    </React.Fragment>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Code = styled.code`\n  font-size: 12px;\n  color: rgba(34, 34, 34, 0.38);\n`;\n","import styled from 'styled-components';\n\nexport const CallContainer = styled.div`\n  background-color: #f0f3f7;\n  padding: 10px;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  width: 100%;\n  cursor: pointer;\n  transition: 0.2s ease-out;\n  &:hover {\n    background-color: #dde0e2;\n  }\n`;\n","import styled from 'styled-components';\nexport const MethodType = styled.div`\n  margin-right: 10px;\n  color: green;\n`;\n","import styled from 'styled-components';\n\nexport const CallHeader = styled.div`\n  display: flex;\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import React from 'react';\nimport { Box, Grid, Typography } from '@material-ui/core';\nimport { useVisible } from 'react-hooks-visible';\nimport { useClipboard } from 'use-clipboard-copy';\n\nimport { useStoreActions } from 'app/modules/documentation-module/state/store';\nimport { ApiItemDivider } from 'app/modules/documentation-module/common/DocDetail/common/utils/ui';\nimport { ApiCallParamList } from 'app/modules/documentation-module/common/DocDetail/common/ApiParameterList';\nimport { Code } from 'app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/Code';\nimport { CallContainer } from 'app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/CallContainer';\nimport { MethodType } from 'app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/MethodType';\nimport { CallHeader } from 'app/modules/documentation-module/common/DocDetail/common/ApiCallFragment/common/ui/CallHeader';\nimport styled from 'styled-components';\nimport gfm from 'remark-gfm';\nimport highlight from 'remark-highlight.js';\nimport Markdown from 'react-markdown';\n\n/* -------------------------------------------------------------------------- */\n/* ApiCallFragment */\n/* -------------------------------------------------------------------------- */\n\nconst CopySignal = styled.div`\n  color: green;\n  margin-left: 10px;\n`;\n\nexport const ApiCallFragment = (data) => {\n  const clipboard = useClipboard({ copiedTimeout: 600 });\n  const parsed = data.data;\n  const { request } = parsed;\n  const apiEnvVars = \"{{IATI.cloud Base URL}}{{Solr API endpoint}}\"\n  const apiURL = \"https://datastore.iati.cloud/api/v2/\"\n\n  const showRequest = useStoreActions((actions) => actions.request.showRequest);\n\n  // console.log('rendr ApiCallFragment');\n\n  const [targetRef, percent] = useVisible<HTMLDivElement>(\n    (vi: number) => Math.floor(vi * 100),\n    {\n      rootMargin: '300px 0px -50px 0px',\n    }\n  );\n\n  const handleClick = React.useCallback(() => {\n    const url = request.url.raw.replace(apiEnvVars, apiURL);\n    clipboard.copy(url); // programmatically copying a value\n  }, [clipboard.copy]);\n\n  return (\n    <Grid\n      item\n      md={12}\n      id={parsed.name ? parsed.name : ''}\n      ref={targetRef}\n      style={{ opacity: percent / 100 }}\n    >\n      <Box width=\"100%\" height=\"39px\" />\n      <Grid container spacing={2}>\n        <Grid item md={12}>\n          {/* call header */}\n          <CallHeader>\n            {request && <MethodType>{request.method}</MethodType>}\n            <div>{parsed.name}</div>\n            <CopySignal>{clipboard.copied ? 'Copied' : ''}</CopySignal>\n          </CallHeader>\n        </Grid>\n\n        {/* call url */}\n        {request && (\n          <>\n            <Grid item md={12}>\n              <CallContainer onClick={handleClick}>\n                <Code>\n                  {request.url.raw.replace(apiEnvVars, apiURL)}\n                </Code>\n              </CallContainer>\n            </Grid>\n            <Grid item md={12} />\n          </>\n        )}\n\n        {parsed.description && (\n          <Grid item md={12}>\n            <Typography variant=\"body2\">\n              <Markdown className=\"markdown\" remarkPlugins={[gfm, highlight]}>\n                {parsed.description}\n              </Markdown>\n            </Typography>\n          </Grid>\n        )}\n\n        {/* parameter list */}\n        {request && (\n          <Grid item md={12}>\n            <ApiCallParamList data={request.url.query} />\n          </Grid>\n        )}\n\n        <Grid item md={12}>\n          <ApiItemDivider />\n        </Grid>\n        <Box width=\"100%\" height=\"39px\" />\n      </Grid>\n    </Grid>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n","import React from 'react';\nimport { ApiCallFragment } from 'app/modules/documentation-module/common/DocDetail/common/ApiCallFragment';\n\nexport const CallFragment = ({ item }) => (\n  <>\n    {item.request && <ApiCallFragment data={item} key={item.id} />}\n\n    {item.item &&\n      item.item.map((item) => (\n        <React.Fragment key={item.id}>\n          <ApiCallFragment data={item} />\n\n          {item.item &&\n            item.item.map((subItem) => (\n              <ApiCallFragment data={subItem} key={subItem.name} />\n            ))}\n        </React.Fragment>\n      ))}\n  </>\n);\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SubCategoryHeader } from 'app/modules/documentation-module/common/DocDetail/common/ui/SubCategoryHeader';\nimport { SubCaregoryDescription } from 'app/modules/documentation-module/common/DocDetail/common/ui/SubCaregoryDescription';\nimport { CallFragment } from 'app/modules/documentation-module/common/DocDetail/common/ui/CallFragment';\nexport const SubCategoryFragment = ({ item }) => (\n  <Grid container spacing={2} id={item.name} key={item.name}>\n    {item._postman_isSubFolder && <SubCategoryHeader item={item} />}\n\n    {/*<Box height=\"20px\" />*/}\n\n    {item.description && <SubCaregoryDescription item={item} />}\n    {/*<Box height=\"20px\" />*/}\n\n    <CallFragment item={item} />\n  </Grid>\n);\n","// @ts-nocheck\n//cc:api documentation module#; content - api category/call detail\nimport React from 'react';\nimport { useStoreState } from 'app/modules/documentation-module/state/store';\nimport { Box } from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport { Root } from 'app/modules/documentation-module/state/RootModel';\nimport {\n  MainCategoryModel,\n  SubCategory1Model,\n} from 'app/modules/documentation-module/state/model';\nimport { CategoryHeader } from 'app/modules/documentation-module/common/DocDetail/common/ui/CategoryHeader';\nimport { SubCategoryFragment } from 'app/modules/documentation-module/common/DocDetail/common/ui/SubCategoryFragment';\n\n/* -------------------------------------------------------------------------- */\n/* DocDetail */\n/* -------------------------------------------------------------------------- */\nexport const DocDetail = () => {\n  let { _postman_id } = useParams();\n\n  // @ts-ignore\n  const data: Root = useStoreState((state) => state.data && state.data);\n  const categories: MainCategoryModel[] = data && data.collection.item;\n\n  // @ts-ignore\n  const category: SubCategory1Model =\n    categories && categories.find((cat) => cat.id === _postman_id);\n\n  return (\n    <React.Fragment>\n      <Box height=\"20px\" />\n      {category && <CategoryHeader category={category} />}\n\n      {/* -------------------- */}\n      {/* map through cattegories */}\n      {category &&\n        // @ts-ignore\n        category.item.map((item) => (\n          <SubCategoryFragment item={item} key={item.id} />\n        ))}\n      {/* ---------- */}\n    </React.Fragment>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n","import styled from 'styled-components';\nexport const LandingEndpointItem = styled.li`\n  font-family: 'Roboto Mono', monospace;\n  font-size: 14px;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: rgba(34, 34, 34, 0.38);\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ApiListItemModel } from 'app/modules/documentation-module/common/DocDetail/common/ApiBaseList/model';\nimport { Collection } from 'app/modules/documentation-module/state/model';\nimport { LandingEndpointItem } from 'app/modules/documentation-module/common/DocDetail/common/ApiBaseList/common/ui/LandingEndpointItem';\nimport { getEndpointPath } from '../utils/ui';\n\nexport const ApiListItem = (props: ApiListItemModel) => {\n  return (\n    <LandingEndpointItem>\n      <NavLink to={'/documentation/' + props.id}>\n        {props.name + ': ' + props.path}\n      </NavLink>\n    </LandingEndpointItem>\n  );\n};\n\nexport const ApiList = (props: Collection) => {\n  return (\n    <ul>\n      {props.item &&\n        props.item.map((endpoint) => (\n          <ApiListItem\n            path={getEndpointPath(endpoint)}\n            name={endpoint.name}\n            id={endpoint.id}\n            key={endpoint.id}\n          />\n        ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeaderH6 = styled.div`\n  font-family: Inter;\n  font-size: 20px;\n  font-weight: 600;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  color: var(--black);\n`;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { CircularProgress } from '@material-ui/core';\n\nconst LoadingContainer = styled.div`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  width: 100%;\n  margin-top: 10rem;\n`;\n\nexport const LoadingIndicator = () => (\n  <LoadingContainer>\n    <CircularProgress />\n  </LoadingContainer>\n)\n","// cc:api documentation module#; content - landing\nimport React from 'react';\nimport { Box, Grid, Typography } from '@material-ui/core';\nimport { ApiList } from 'app/modules/documentation-module/common/DocDetail/common/ApiBaseList';\nimport { useStoreState } from 'app/modules/documentation-module/state/store';\nimport { Root } from 'app/modules/documentation-module/state/RootModel';\nimport { HeaderH6 } from 'app/modules/documentation-module/common/DocLanding/common/ui/HeaderH6';\nimport { LoadingIndicator } from './common/ui/LoadingIndicator';\n\nexport const DocLanding = () => {\n  // @ts-ignore\n  const data: Root = useStoreState((state) => state.data && state.data);\n  const loading = useStoreState((state) => state.loading);\n\n  const collection = data && data.collection;\n\n  return (\n    <>\n      <Box width=\"100%\" height=\"54px\" />\n      <Grid container>\n        <Grid item md={11}>\n          {/* todo: in due time the css attribute should be cleaned */}\n          <Typography\n            variant=\"h6\"\n            css={`\n              && {\n                line-height: 30px;\n                font-weight: normal;\n              }\n            `}\n          >\n            <b>API Documentation</b>\n          </Typography>\n        </Grid>\n\n        <Box width=\"100%\" height=\"30px\" />\n\n        {/* description */}\n        <Grid item md={12}>\n          <Typography variant=\"body2\">\n            This API provides programmatic access to query IATI data. The API\n            responses are available in JSON, XML and CSV format. The API is\n            developed using the Django rest framework and also makes use of\n            Solr, an open source enterprise search platform, written in Java.\n          </Typography>\n        </Grid>\n      </Grid>\n      {/* ------------------------------------------------------------------ */}\n      <Box width=\"100%\" height=\"74px\" />\n      {/* -------------------- */}\n      {/* available endpoints */}\n      <Grid container>\n        <Grid item md={12}>\n          <HeaderH6\n            css={`\n              && {\n                margin-bottom: 8px;\n              }\n            `}\n          >\n            Available endpoints\n          </HeaderH6>\n        </Grid>\n        {loading ? (\n          <LoadingIndicator />\n        ) : (\n          <Grid item md={12}>\n            {collection && (\n              <ApiList info={collection.info} item={collection.item} />\n            )}\n          </Grid>\n        )}\n      </Grid>\n      {/* ---------- */}\n      <Box width=\"100%\" height=\"50px\" />\n    </>\n  );\n};\n","//cc:api documentation module#; routes\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useEffectOnce } from 'react-use';\n\nimport { Route, Switch } from 'react-router';\nimport { DocDetail } from 'app/modules/documentation-module/common/DocDetail';\nimport { DocLanding } from 'app/modules/documentation-module/common/DocLanding';\nimport { useStoreActions } from 'app/modules/documentation-module/state/store';\n\nconst RouteContainer = styled.div`\n  position: sticky;\n  top: 187px;\n  overflow-y: scroll;\n  height: calc(100vh - 187px);\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const DocumentationRoutes = () => {\n  const fetchPostman = useStoreActions((actions) => actions.fetch);\n\n  useEffectOnce(() => {\n    //console.log('fetch postman data once');\n\n    fetchPostman();\n\n    return () => {\n      //console.log('Running clean-up of effect on unmount');\n    };\n  });\n\n  return (\n    <RouteContainer>\n      <Switch>\n        <Route exact path=\"/documentation\">\n          <DocLanding />\n        </Route>\n        <Route path=\"/documentation/:_postman_id\">\n          <DocDetail />\n        </Route>\n      </Switch>\n    </RouteContainer>\n  );\n};\n","//cc:application modules#;api documentation module\n//cc:api documentation module#; main\nimport React from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport { StoreProvider } from 'easy-peasy';\nimport { DocsideBar } from 'app/modules/documentation-module/common/DocSideBar';\nimport { Header } from 'app/components/surfaces/Header';\nimport docStore from 'app/modules/documentation-module/state/store';\nimport { DocumentationRoutes } from 'app/modules/documentation-module/routes';\nimport useTitle from 'react-use/lib/useTitle';\n\nfunction DocumentationModule() {\n  useTitle('IATI.cloud - Documentation');\n\n  return (\n    <StoreProvider store={docStore}>\n      {/*<Redirect to=\"/documentation/introduction\" />*/}\n      <Header />\n      <Container maxWidth=\"lg\">\n        <Grid container direction=\"row\">\n          <Grid item md={4}>\n            <DocsideBar />\n          </Grid>\n          <Grid item md={8}>\n            <DocumentationRoutes />\n          </Grid>\n        </Grid>\n      </Container>\n    </StoreProvider>\n  );\n}\n\nexport default DocumentationModule;\n"],"sourceRoot":""}